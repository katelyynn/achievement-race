# ACRACE achievement checks
## if achievement locking is enabled
## check if user has earned achivement


## generated with index.html
## should not be modified directly

## Benchmarking
execute unless score story_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/root=true}] at @s unless score @s achievement.story_root matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_root,limit=1] achievement.values
execute unless score story_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/root=true}] at @s unless score @s achievement.story_root matches 1.. if entity @e[tag=achievement,tag=story_root,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/root=true}] at @s unless score @s achievement.story_root matches 1.. run function acrace:pick/take
execute unless score story_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/root=true}] at @s unless score @s achievement.story_root matches 1.. run scoreboard players set @s achievement.story_root 1
execute unless score story_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/root=true}] at @s unless score @s achievement.story_root matches 1.. run scoreboard players add story_root achievement.claims 1
## Stone Age
execute unless score story_mine_stone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_stone=true}] at @s unless score @s achievement.story_mine_stone matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_mine_stone,limit=1] achievement.values
execute unless score story_mine_stone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_stone=true}] at @s unless score @s achievement.story_mine_stone matches 1.. if entity @e[tag=achievement,tag=story_mine_stone,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_mine_stone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_stone=true}] at @s unless score @s achievement.story_mine_stone matches 1.. run function acrace:pick/take
execute unless score story_mine_stone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_stone=true}] at @s unless score @s achievement.story_mine_stone matches 1.. run scoreboard players set @s achievement.story_mine_stone 1
execute unless score story_mine_stone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_stone=true}] at @s unless score @s achievement.story_mine_stone matches 1.. run scoreboard players add story_mine_stone achievement.claims 1
## Getting an Upgrade
execute unless score story_upgrade_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/upgrade_tools=true}] at @s unless score @s achievement.story_upgrade_tools matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_upgrade_tools,limit=1] achievement.values
execute unless score story_upgrade_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/upgrade_tools=true}] at @s unless score @s achievement.story_upgrade_tools matches 1.. if entity @e[tag=achievement,tag=story_upgrade_tools,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_upgrade_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/upgrade_tools=true}] at @s unless score @s achievement.story_upgrade_tools matches 1.. run function acrace:pick/take
execute unless score story_upgrade_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/upgrade_tools=true}] at @s unless score @s achievement.story_upgrade_tools matches 1.. run scoreboard players set @s achievement.story_upgrade_tools 1
execute unless score story_upgrade_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/upgrade_tools=true}] at @s unless score @s achievement.story_upgrade_tools matches 1.. run scoreboard players add story_upgrade_tools achievement.claims 1
## Acquire Hardware
execute unless score story_smelt_iron achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/smelt_iron=true}] at @s unless score @s achievement.story_smelt_iron matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_smelt_iron,limit=1] achievement.values
execute unless score story_smelt_iron achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/smelt_iron=true}] at @s unless score @s achievement.story_smelt_iron matches 1.. if entity @e[tag=achievement,tag=story_smelt_iron,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_smelt_iron achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/smelt_iron=true}] at @s unless score @s achievement.story_smelt_iron matches 1.. run function acrace:pick/take
execute unless score story_smelt_iron achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/smelt_iron=true}] at @s unless score @s achievement.story_smelt_iron matches 1.. run scoreboard players set @s achievement.story_smelt_iron 1
execute unless score story_smelt_iron achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/smelt_iron=true}] at @s unless score @s achievement.story_smelt_iron matches 1.. run scoreboard players add story_smelt_iron achievement.claims 1
## Suit Up
execute unless score story_obtain_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/obtain_armor=true}] at @s unless score @s achievement.story_obtain_armor matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_obtain_armor,limit=1] achievement.values
execute unless score story_obtain_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/obtain_armor=true}] at @s unless score @s achievement.story_obtain_armor matches 1.. if entity @e[tag=achievement,tag=story_obtain_armor,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_obtain_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/obtain_armor=true}] at @s unless score @s achievement.story_obtain_armor matches 1.. run function acrace:pick/take
execute unless score story_obtain_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/obtain_armor=true}] at @s unless score @s achievement.story_obtain_armor matches 1.. run scoreboard players set @s achievement.story_obtain_armor 1
execute unless score story_obtain_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/obtain_armor=true}] at @s unless score @s achievement.story_obtain_armor matches 1.. run scoreboard players add story_obtain_armor achievement.claims 1
## Hot Stuff
execute unless score story_lava_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/lava_bucket=true}] at @s unless score @s achievement.story_lava_bucket matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_lava_bucket,limit=1] achievement.values
execute unless score story_lava_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/lava_bucket=true}] at @s unless score @s achievement.story_lava_bucket matches 1.. if entity @e[tag=achievement,tag=story_lava_bucket,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_lava_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/lava_bucket=true}] at @s unless score @s achievement.story_lava_bucket matches 1.. run function acrace:pick/take
execute unless score story_lava_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/lava_bucket=true}] at @s unless score @s achievement.story_lava_bucket matches 1.. run scoreboard players set @s achievement.story_lava_bucket 1
execute unless score story_lava_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/lava_bucket=true}] at @s unless score @s achievement.story_lava_bucket matches 1.. run scoreboard players add story_lava_bucket achievement.claims 1
## Isn't It Iron Pick
execute unless score story_iron_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/iron_tools=true}] at @s unless score @s achievement.story_iron_tools matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_iron_tools,limit=1] achievement.values
execute unless score story_iron_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/iron_tools=true}] at @s unless score @s achievement.story_iron_tools matches 1.. if entity @e[tag=achievement,tag=story_iron_tools,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_iron_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/iron_tools=true}] at @s unless score @s achievement.story_iron_tools matches 1.. run function acrace:pick/take
execute unless score story_iron_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/iron_tools=true}] at @s unless score @s achievement.story_iron_tools matches 1.. run scoreboard players set @s achievement.story_iron_tools 1
execute unless score story_iron_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/iron_tools=true}] at @s unless score @s achievement.story_iron_tools matches 1.. run scoreboard players add story_iron_tools achievement.claims 1
## Not Today, Thank You
execute unless score story_deflect_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/deflect_arrow=true}] at @s unless score @s achievement.story_deflect_arrow matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_deflect_arrow,limit=1] achievement.values
execute unless score story_deflect_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/deflect_arrow=true}] at @s unless score @s achievement.story_deflect_arrow matches 1.. if entity @e[tag=achievement,tag=story_deflect_arrow,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_deflect_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/deflect_arrow=true}] at @s unless score @s achievement.story_deflect_arrow matches 1.. run function acrace:pick/take
execute unless score story_deflect_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/deflect_arrow=true}] at @s unless score @s achievement.story_deflect_arrow matches 1.. run scoreboard players set @s achievement.story_deflect_arrow 1
execute unless score story_deflect_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/deflect_arrow=true}] at @s unless score @s achievement.story_deflect_arrow matches 1.. run scoreboard players add story_deflect_arrow achievement.claims 1
## Ice Bucket Challenge
execute unless score story_form_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/form_obsidian=true}] at @s unless score @s achievement.story_form_obsidian matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_form_obsidian,limit=1] achievement.values
execute unless score story_form_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/form_obsidian=true}] at @s unless score @s achievement.story_form_obsidian matches 1.. if entity @e[tag=achievement,tag=story_form_obsidian,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_form_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/form_obsidian=true}] at @s unless score @s achievement.story_form_obsidian matches 1.. run function acrace:pick/take
execute unless score story_form_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/form_obsidian=true}] at @s unless score @s achievement.story_form_obsidian matches 1.. run scoreboard players set @s achievement.story_form_obsidian 1
execute unless score story_form_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/form_obsidian=true}] at @s unless score @s achievement.story_form_obsidian matches 1.. run scoreboard players add story_form_obsidian achievement.claims 1
## Diamonds!
execute unless score story_mine_diamond achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_diamond=true}] at @s unless score @s achievement.story_mine_diamond matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_mine_diamond,limit=1] achievement.values
execute unless score story_mine_diamond achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_diamond=true}] at @s unless score @s achievement.story_mine_diamond matches 1.. if entity @e[tag=achievement,tag=story_mine_diamond,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_mine_diamond achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_diamond=true}] at @s unless score @s achievement.story_mine_diamond matches 1.. run function acrace:pick/take
execute unless score story_mine_diamond achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_diamond=true}] at @s unless score @s achievement.story_mine_diamond matches 1.. run scoreboard players set @s achievement.story_mine_diamond 1
execute unless score story_mine_diamond achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/mine_diamond=true}] at @s unless score @s achievement.story_mine_diamond matches 1.. run scoreboard players add story_mine_diamond achievement.claims 1
## Isn't It?
execute unless score story_diamond_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_tools=true}] at @s unless score @s achievement.story_diamond_tools matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_diamond_tools,limit=1] achievement.values
execute unless score story_diamond_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_tools=true}] at @s unless score @s achievement.story_diamond_tools matches 1.. if entity @e[tag=achievement,tag=story_diamond_tools,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_diamond_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_tools=true}] at @s unless score @s achievement.story_diamond_tools matches 1.. run function acrace:pick/take
execute unless score story_diamond_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_tools=true}] at @s unless score @s achievement.story_diamond_tools matches 1.. run scoreboard players set @s achievement.story_diamond_tools 1
execute unless score story_diamond_tools achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_tools=true}] at @s unless score @s achievement.story_diamond_tools matches 1.. run scoreboard players add story_diamond_tools achievement.claims 1
## We Need to Go Deeper
execute unless score story_enter_the_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_nether=true}] at @s unless score @s achievement.story_enter_the_nether matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_enter_the_nether,limit=1] achievement.values
execute unless score story_enter_the_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_nether=true}] at @s unless score @s achievement.story_enter_the_nether matches 1.. if entity @e[tag=achievement,tag=story_enter_the_nether,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_enter_the_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_nether=true}] at @s unless score @s achievement.story_enter_the_nether matches 1.. run function acrace:pick/take
execute unless score story_enter_the_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_nether=true}] at @s unless score @s achievement.story_enter_the_nether matches 1.. run scoreboard players set @s achievement.story_enter_the_nether 1
execute unless score story_enter_the_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_nether=true}] at @s unless score @s achievement.story_enter_the_nether matches 1.. run scoreboard players add story_enter_the_nether achievement.claims 1
## Cover Me with Diamonds
execute unless score story_shiny_gear achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/shiny_gear=true}] at @s unless score @s achievement.story_shiny_gear matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_shiny_gear,limit=1] achievement.values
execute unless score story_shiny_gear achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/shiny_gear=true}] at @s unless score @s achievement.story_shiny_gear matches 1.. if entity @e[tag=achievement,tag=story_shiny_gear,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_shiny_gear achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/shiny_gear=true}] at @s unless score @s achievement.story_shiny_gear matches 1.. run function acrace:pick/take
execute unless score story_shiny_gear achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/shiny_gear=true}] at @s unless score @s achievement.story_shiny_gear matches 1.. run scoreboard players set @s achievement.story_shiny_gear 1
execute unless score story_shiny_gear achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/shiny_gear=true}] at @s unless score @s achievement.story_shiny_gear matches 1.. run scoreboard players add story_shiny_gear achievement.claims 1
## A Full Set
execute unless score story_diamond_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_armor=true}] at @s unless score @s achievement.story_diamond_armor matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_diamond_armor,limit=1] achievement.values
execute unless score story_diamond_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_armor=true}] at @s unless score @s achievement.story_diamond_armor matches 1.. if entity @e[tag=achievement,tag=story_diamond_armor,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_diamond_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_armor=true}] at @s unless score @s achievement.story_diamond_armor matches 1.. run function acrace:pick/take
execute unless score story_diamond_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_armor=true}] at @s unless score @s achievement.story_diamond_armor matches 1.. run scoreboard players set @s achievement.story_diamond_armor 1
execute unless score story_diamond_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/diamond_armor=true}] at @s unless score @s achievement.story_diamond_armor matches 1.. run scoreboard players add story_diamond_armor achievement.claims 1
## Enchanter
execute unless score story_enchant_item achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enchant_item=true}] at @s unless score @s achievement.story_enchant_item matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_enchant_item,limit=1] achievement.values
execute unless score story_enchant_item achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enchant_item=true}] at @s unless score @s achievement.story_enchant_item matches 1.. if entity @e[tag=achievement,tag=story_enchant_item,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_enchant_item achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enchant_item=true}] at @s unless score @s achievement.story_enchant_item matches 1.. run function acrace:pick/take
execute unless score story_enchant_item achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enchant_item=true}] at @s unless score @s achievement.story_enchant_item matches 1.. run scoreboard players set @s achievement.story_enchant_item 1
execute unless score story_enchant_item achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enchant_item=true}] at @s unless score @s achievement.story_enchant_item matches 1.. run scoreboard players add story_enchant_item achievement.claims 1
## Zombie Doctor
execute unless score story_cure_zombie_villager achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/cure_zombie_villager=true}] at @s unless score @s achievement.story_cure_zombie_villager matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_cure_zombie_villager,limit=1] achievement.values
execute unless score story_cure_zombie_villager achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/cure_zombie_villager=true}] at @s unless score @s achievement.story_cure_zombie_villager matches 1.. if entity @e[tag=achievement,tag=story_cure_zombie_villager,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_cure_zombie_villager achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/cure_zombie_villager=true}] at @s unless score @s achievement.story_cure_zombie_villager matches 1.. run function acrace:pick/take
execute unless score story_cure_zombie_villager achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/cure_zombie_villager=true}] at @s unless score @s achievement.story_cure_zombie_villager matches 1.. run scoreboard players set @s achievement.story_cure_zombie_villager 1
execute unless score story_cure_zombie_villager achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/cure_zombie_villager=true}] at @s unless score @s achievement.story_cure_zombie_villager matches 1.. run scoreboard players add story_cure_zombie_villager achievement.claims 1
## Eye Spy
execute unless score story_follow_ender_eye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/follow_ender_eye=true}] at @s unless score @s achievement.story_follow_ender_eye matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_follow_ender_eye,limit=1] achievement.values
execute unless score story_follow_ender_eye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/follow_ender_eye=true}] at @s unless score @s achievement.story_follow_ender_eye matches 1.. if entity @e[tag=achievement,tag=story_follow_ender_eye,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_follow_ender_eye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/follow_ender_eye=true}] at @s unless score @s achievement.story_follow_ender_eye matches 1.. run function acrace:pick/take
execute unless score story_follow_ender_eye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/follow_ender_eye=true}] at @s unless score @s achievement.story_follow_ender_eye matches 1.. run scoreboard players set @s achievement.story_follow_ender_eye 1
execute unless score story_follow_ender_eye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/follow_ender_eye=true}] at @s unless score @s achievement.story_follow_ender_eye matches 1.. run scoreboard players add story_follow_ender_eye achievement.claims 1
## The End?
execute unless score story_enter_the_end achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_end=true}] at @s unless score @s achievement.story_enter_the_end matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=story_enter_the_end,limit=1] achievement.values
execute unless score story_enter_the_end achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_end=true}] at @s unless score @s achievement.story_enter_the_end matches 1.. if entity @e[tag=achievement,tag=story_enter_the_end,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score story_enter_the_end achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_end=true}] at @s unless score @s achievement.story_enter_the_end matches 1.. run function acrace:pick/take
execute unless score story_enter_the_end achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_end=true}] at @s unless score @s achievement.story_enter_the_end matches 1.. run scoreboard players set @s achievement.story_enter_the_end 1
execute unless score story_enter_the_end achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:story/enter_the_end=true}] at @s unless score @s achievement.story_enter_the_end matches 1.. run scoreboard players add story_enter_the_end achievement.claims 1
## Return to Sender
execute unless score nether_return_to_sender achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/return_to_sender=true}] at @s unless score @s achievement.nether_return_to_sender matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_return_to_sender,limit=1] achievement.values
execute unless score nether_return_to_sender achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/return_to_sender=true}] at @s unless score @s achievement.nether_return_to_sender matches 1.. if entity @e[tag=achievement,tag=nether_return_to_sender,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_return_to_sender achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/return_to_sender=true}] at @s unless score @s achievement.nether_return_to_sender matches 1.. run function acrace:pick/take
execute unless score nether_return_to_sender achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/return_to_sender=true}] at @s unless score @s achievement.nether_return_to_sender matches 1.. run scoreboard players set @s achievement.nether_return_to_sender 1
execute unless score nether_return_to_sender achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/return_to_sender=true}] at @s unless score @s achievement.nether_return_to_sender matches 1.. run scoreboard players add nether_return_to_sender achievement.claims 1
## Those Were the Days
execute unless score nether_find_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_bastion=true}] at @s unless score @s achievement.nether_find_bastion matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_find_bastion,limit=1] achievement.values
execute unless score nether_find_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_bastion=true}] at @s unless score @s achievement.nether_find_bastion matches 1.. if entity @e[tag=achievement,tag=nether_find_bastion,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_find_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_bastion=true}] at @s unless score @s achievement.nether_find_bastion matches 1.. run function acrace:pick/take
execute unless score nether_find_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_bastion=true}] at @s unless score @s achievement.nether_find_bastion matches 1.. run scoreboard players set @s achievement.nether_find_bastion 1
execute unless score nether_find_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_bastion=true}] at @s unless score @s achievement.nether_find_bastion matches 1.. run scoreboard players add nether_find_bastion achievement.claims 1
## Hidden in the Depths
execute unless score nether_obtain_ancient_debris achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_ancient_debris=true}] at @s unless score @s achievement.nether_obtain_ancient_debris matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_obtain_ancient_debris,limit=1] achievement.values
execute unless score nether_obtain_ancient_debris achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_ancient_debris=true}] at @s unless score @s achievement.nether_obtain_ancient_debris matches 1.. if entity @e[tag=achievement,tag=nether_obtain_ancient_debris,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_obtain_ancient_debris achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_ancient_debris=true}] at @s unless score @s achievement.nether_obtain_ancient_debris matches 1.. run function acrace:pick/take
execute unless score nether_obtain_ancient_debris achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_ancient_debris=true}] at @s unless score @s achievement.nether_obtain_ancient_debris matches 1.. run scoreboard players set @s achievement.nether_obtain_ancient_debris 1
execute unless score nether_obtain_ancient_debris achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_ancient_debris=true}] at @s unless score @s achievement.nether_obtain_ancient_debris matches 1.. run scoreboard players add nether_obtain_ancient_debris achievement.claims 1
## Subspace Bubble
execute unless score nether_fast_travel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/fast_travel=true}] at @s unless score @s achievement.nether_fast_travel matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_fast_travel,limit=1] achievement.values
execute unless score nether_fast_travel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/fast_travel=true}] at @s unless score @s achievement.nether_fast_travel matches 1.. if entity @e[tag=achievement,tag=nether_fast_travel,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_fast_travel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/fast_travel=true}] at @s unless score @s achievement.nether_fast_travel matches 1.. run function acrace:pick/take
execute unless score nether_fast_travel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/fast_travel=true}] at @s unless score @s achievement.nether_fast_travel matches 1.. run scoreboard players set @s achievement.nether_fast_travel 1
execute unless score nether_fast_travel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/fast_travel=true}] at @s unless score @s achievement.nether_fast_travel matches 1.. run scoreboard players add nether_fast_travel achievement.claims 1
## A Terrible Fortress
execute unless score nether_find_fortress achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_fortress=true}] at @s unless score @s achievement.nether_find_fortress matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_find_fortress,limit=1] achievement.values
execute unless score nether_find_fortress achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_fortress=true}] at @s unless score @s achievement.nether_find_fortress matches 1.. if entity @e[tag=achievement,tag=nether_find_fortress,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_find_fortress achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_fortress=true}] at @s unless score @s achievement.nether_find_fortress matches 1.. run function acrace:pick/take
execute unless score nether_find_fortress achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_fortress=true}] at @s unless score @s achievement.nether_find_fortress matches 1.. run scoreboard players set @s achievement.nether_find_fortress 1
execute unless score nether_find_fortress achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/find_fortress=true}] at @s unless score @s achievement.nether_find_fortress matches 1.. run scoreboard players add nether_find_fortress achievement.claims 1
## Who is Cutting Onions?
execute unless score nether_obtain_crying_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_crying_obsidian=true}] at @s unless score @s achievement.nether_obtain_crying_obsidian matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_obtain_crying_obsidian,limit=1] achievement.values
execute unless score nether_obtain_crying_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_crying_obsidian=true}] at @s unless score @s achievement.nether_obtain_crying_obsidian matches 1.. if entity @e[tag=achievement,tag=nether_obtain_crying_obsidian,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_obtain_crying_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_crying_obsidian=true}] at @s unless score @s achievement.nether_obtain_crying_obsidian matches 1.. run function acrace:pick/take
execute unless score nether_obtain_crying_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_crying_obsidian=true}] at @s unless score @s achievement.nether_obtain_crying_obsidian matches 1.. run scoreboard players set @s achievement.nether_obtain_crying_obsidian 1
execute unless score nether_obtain_crying_obsidian achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_crying_obsidian=true}] at @s unless score @s achievement.nether_obtain_crying_obsidian matches 1.. run scoreboard players add nether_obtain_crying_obsidian achievement.claims 1
## Oh Shiny
execute unless score nether_distract_piglin achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/distract_piglin=true}] at @s unless score @s achievement.nether_distract_piglin matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_distract_piglin,limit=1] achievement.values
execute unless score nether_distract_piglin achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/distract_piglin=true}] at @s unless score @s achievement.nether_distract_piglin matches 1.. if entity @e[tag=achievement,tag=nether_distract_piglin,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_distract_piglin achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/distract_piglin=true}] at @s unless score @s achievement.nether_distract_piglin matches 1.. run function acrace:pick/take
execute unless score nether_distract_piglin achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/distract_piglin=true}] at @s unless score @s achievement.nether_distract_piglin matches 1.. run scoreboard players set @s achievement.nether_distract_piglin 1
execute unless score nether_distract_piglin achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/distract_piglin=true}] at @s unless score @s achievement.nether_distract_piglin matches 1.. run scoreboard players add nether_distract_piglin achievement.claims 1
## This Boat Has Legs
execute unless score nether_ride_strider achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider=true}] at @s unless score @s achievement.nether_ride_strider matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_ride_strider,limit=1] achievement.values
execute unless score nether_ride_strider achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider=true}] at @s unless score @s achievement.nether_ride_strider matches 1.. if entity @e[tag=achievement,tag=nether_ride_strider,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_ride_strider achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider=true}] at @s unless score @s achievement.nether_ride_strider matches 1.. run function acrace:pick/take
execute unless score nether_ride_strider achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider=true}] at @s unless score @s achievement.nether_ride_strider matches 1.. run scoreboard players set @s achievement.nether_ride_strider 1
execute unless score nether_ride_strider achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider=true}] at @s unless score @s achievement.nether_ride_strider matches 1.. run scoreboard players add nether_ride_strider achievement.claims 1
## Uneasy Alliance
execute unless score nether_uneasy_alliance achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/uneasy_alliance=true}] at @s unless score @s achievement.nether_uneasy_alliance matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_uneasy_alliance,limit=1] achievement.values
execute unless score nether_uneasy_alliance achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/uneasy_alliance=true}] at @s unless score @s achievement.nether_uneasy_alliance matches 1.. if entity @e[tag=achievement,tag=nether_uneasy_alliance,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_uneasy_alliance achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/uneasy_alliance=true}] at @s unless score @s achievement.nether_uneasy_alliance matches 1.. run function acrace:pick/take
execute unless score nether_uneasy_alliance achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/uneasy_alliance=true}] at @s unless score @s achievement.nether_uneasy_alliance matches 1.. run scoreboard players set @s achievement.nether_uneasy_alliance 1
execute unless score nether_uneasy_alliance achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/uneasy_alliance=true}] at @s unless score @s achievement.nether_uneasy_alliance matches 1.. run scoreboard players add nether_uneasy_alliance achievement.claims 1
## War Pigs
execute unless score nether_loot_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/loot_bastion=true}] at @s unless score @s achievement.nether_loot_bastion matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_loot_bastion,limit=1] achievement.values
execute unless score nether_loot_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/loot_bastion=true}] at @s unless score @s achievement.nether_loot_bastion matches 1.. if entity @e[tag=achievement,tag=nether_loot_bastion,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_loot_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/loot_bastion=true}] at @s unless score @s achievement.nether_loot_bastion matches 1.. run function acrace:pick/take
execute unless score nether_loot_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/loot_bastion=true}] at @s unless score @s achievement.nether_loot_bastion matches 1.. run scoreboard players set @s achievement.nether_loot_bastion 1
execute unless score nether_loot_bastion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/loot_bastion=true}] at @s unless score @s achievement.nether_loot_bastion matches 1.. run scoreboard players add nether_loot_bastion achievement.claims 1
## Country Lode, Take Me Home
execute unless score nether_use_lodestone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/use_lodestone=true}] at @s unless score @s achievement.nether_use_lodestone matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_use_lodestone,limit=1] achievement.values
execute unless score nether_use_lodestone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/use_lodestone=true}] at @s unless score @s achievement.nether_use_lodestone matches 1.. if entity @e[tag=achievement,tag=nether_use_lodestone,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_use_lodestone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/use_lodestone=true}] at @s unless score @s achievement.nether_use_lodestone matches 1.. run function acrace:pick/take
execute unless score nether_use_lodestone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/use_lodestone=true}] at @s unless score @s achievement.nether_use_lodestone matches 1.. run scoreboard players set @s achievement.nether_use_lodestone 1
execute unless score nether_use_lodestone achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/use_lodestone=true}] at @s unless score @s achievement.nether_use_lodestone matches 1.. run scoreboard players add nether_use_lodestone achievement.claims 1
## Cover Me in Debris
execute unless score nether_netherite_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/netherite_armor=true}] at @s unless score @s achievement.nether_netherite_armor matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_netherite_armor,limit=1] achievement.values
execute unless score nether_netherite_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/netherite_armor=true}] at @s unless score @s achievement.nether_netherite_armor matches 1.. if entity @e[tag=achievement,tag=nether_netherite_armor,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_netherite_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/netherite_armor=true}] at @s unless score @s achievement.nether_netherite_armor matches 1.. run function acrace:pick/take
execute unless score nether_netherite_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/netherite_armor=true}] at @s unless score @s achievement.nether_netherite_armor matches 1.. run scoreboard players set @s achievement.nether_netherite_armor 1
execute unless score nether_netherite_armor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/netherite_armor=true}] at @s unless score @s achievement.nether_netherite_armor matches 1.. run scoreboard players add nether_netherite_armor achievement.claims 1
## Spooky Scary Skeleton
execute unless score nether_get_wither_skull achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/get_wither_skull=true}] at @s unless score @s achievement.nether_get_wither_skull matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_get_wither_skull,limit=1] achievement.values
execute unless score nether_get_wither_skull achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/get_wither_skull=true}] at @s unless score @s achievement.nether_get_wither_skull matches 1.. if entity @e[tag=achievement,tag=nether_get_wither_skull,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_get_wither_skull achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/get_wither_skull=true}] at @s unless score @s achievement.nether_get_wither_skull matches 1.. run function acrace:pick/take
execute unless score nether_get_wither_skull achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/get_wither_skull=true}] at @s unless score @s achievement.nether_get_wither_skull matches 1.. run scoreboard players set @s achievement.nether_get_wither_skull 1
execute unless score nether_get_wither_skull achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/get_wither_skull=true}] at @s unless score @s achievement.nether_get_wither_skull matches 1.. run scoreboard players add nether_get_wither_skull achievement.claims 1
## Into Fire
execute unless score nether_obtain_blaze_rod achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_blaze_rod=true}] at @s unless score @s achievement.nether_obtain_blaze_rod matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_obtain_blaze_rod,limit=1] achievement.values
execute unless score nether_obtain_blaze_rod achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_blaze_rod=true}] at @s unless score @s achievement.nether_obtain_blaze_rod matches 1.. if entity @e[tag=achievement,tag=nether_obtain_blaze_rod,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_obtain_blaze_rod achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_blaze_rod=true}] at @s unless score @s achievement.nether_obtain_blaze_rod matches 1.. run function acrace:pick/take
execute unless score nether_obtain_blaze_rod achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_blaze_rod=true}] at @s unless score @s achievement.nether_obtain_blaze_rod matches 1.. run scoreboard players set @s achievement.nether_obtain_blaze_rod 1
execute unless score nether_obtain_blaze_rod achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/obtain_blaze_rod=true}] at @s unless score @s achievement.nether_obtain_blaze_rod matches 1.. run scoreboard players add nether_obtain_blaze_rod achievement.claims 1
## Not Quite "Nine" Lives
execute unless score nether_charge_respawn_anchor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/charge_respawn_anchor=true}] at @s unless score @s achievement.nether_charge_respawn_anchor matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_charge_respawn_anchor,limit=1] achievement.values
execute unless score nether_charge_respawn_anchor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/charge_respawn_anchor=true}] at @s unless score @s achievement.nether_charge_respawn_anchor matches 1.. if entity @e[tag=achievement,tag=nether_charge_respawn_anchor,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_charge_respawn_anchor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/charge_respawn_anchor=true}] at @s unless score @s achievement.nether_charge_respawn_anchor matches 1.. run function acrace:pick/take
execute unless score nether_charge_respawn_anchor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/charge_respawn_anchor=true}] at @s unless score @s achievement.nether_charge_respawn_anchor matches 1.. run scoreboard players set @s achievement.nether_charge_respawn_anchor 1
execute unless score nether_charge_respawn_anchor achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/charge_respawn_anchor=true}] at @s unless score @s achievement.nether_charge_respawn_anchor matches 1.. run scoreboard players add nether_charge_respawn_anchor achievement.claims 1
## Feels Like Home
execute unless score nether_ride_strider_in_overworld_lava achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] at @s unless score @s achievement.nether_ride_strider_in_overworld_lava matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_ride_strider_in_overworld_lava,limit=1] achievement.values
execute unless score nether_ride_strider_in_overworld_lava achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] at @s unless score @s achievement.nether_ride_strider_in_overworld_lava matches 1.. if entity @e[tag=achievement,tag=nether_ride_strider_in_overworld_lava,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_ride_strider_in_overworld_lava achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] at @s unless score @s achievement.nether_ride_strider_in_overworld_lava matches 1.. run function acrace:pick/take
execute unless score nether_ride_strider_in_overworld_lava achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] at @s unless score @s achievement.nether_ride_strider_in_overworld_lava matches 1.. run scoreboard players set @s achievement.nether_ride_strider_in_overworld_lava 1
execute unless score nether_ride_strider_in_overworld_lava achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/ride_strider_in_overworld_lava=true}] at @s unless score @s achievement.nether_ride_strider_in_overworld_lava matches 1.. run scoreboard players add nether_ride_strider_in_overworld_lava achievement.claims 1
## Hot Tourist Destinations
execute unless score nether_explore_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/explore_nether=true}] at @s unless score @s achievement.nether_explore_nether matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_explore_nether,limit=1] achievement.values
execute unless score nether_explore_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/explore_nether=true}] at @s unless score @s achievement.nether_explore_nether matches 1.. if entity @e[tag=achievement,tag=nether_explore_nether,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_explore_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/explore_nether=true}] at @s unless score @s achievement.nether_explore_nether matches 1.. run function acrace:pick/take
execute unless score nether_explore_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/explore_nether=true}] at @s unless score @s achievement.nether_explore_nether matches 1.. run scoreboard players set @s achievement.nether_explore_nether 1
execute unless score nether_explore_nether achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/explore_nether=true}] at @s unless score @s achievement.nether_explore_nether matches 1.. run scoreboard players add nether_explore_nether achievement.claims 1
## Withering Heights
execute unless score nether_summon_wither achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/summon_wither=true}] at @s unless score @s achievement.nether_summon_wither matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_summon_wither,limit=1] achievement.values
execute unless score nether_summon_wither achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/summon_wither=true}] at @s unless score @s achievement.nether_summon_wither matches 1.. if entity @e[tag=achievement,tag=nether_summon_wither,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_summon_wither achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/summon_wither=true}] at @s unless score @s achievement.nether_summon_wither matches 1.. run function acrace:pick/take
execute unless score nether_summon_wither achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/summon_wither=true}] at @s unless score @s achievement.nether_summon_wither matches 1.. run scoreboard players set @s achievement.nether_summon_wither 1
execute unless score nether_summon_wither achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/summon_wither=true}] at @s unless score @s achievement.nether_summon_wither matches 1.. run scoreboard players add nether_summon_wither achievement.claims 1
## Local Brewery
execute unless score nether_brew_potion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/brew_potion=true}] at @s unless score @s achievement.nether_brew_potion matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_brew_potion,limit=1] achievement.values
execute unless score nether_brew_potion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/brew_potion=true}] at @s unless score @s achievement.nether_brew_potion matches 1.. if entity @e[tag=achievement,tag=nether_brew_potion,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_brew_potion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/brew_potion=true}] at @s unless score @s achievement.nether_brew_potion matches 1.. run function acrace:pick/take
execute unless score nether_brew_potion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/brew_potion=true}] at @s unless score @s achievement.nether_brew_potion matches 1.. run scoreboard players set @s achievement.nether_brew_potion 1
execute unless score nether_brew_potion achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/brew_potion=true}] at @s unless score @s achievement.nether_brew_potion matches 1.. run scoreboard players add nether_brew_potion achievement.claims 1
## Bring Home the Beacon
execute unless score nether_create_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_beacon=true}] at @s unless score @s achievement.nether_create_beacon matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_create_beacon,limit=1] achievement.values
execute unless score nether_create_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_beacon=true}] at @s unless score @s achievement.nether_create_beacon matches 1.. if entity @e[tag=achievement,tag=nether_create_beacon,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_create_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_beacon=true}] at @s unless score @s achievement.nether_create_beacon matches 1.. run function acrace:pick/take
execute unless score nether_create_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_beacon=true}] at @s unless score @s achievement.nether_create_beacon matches 1.. run scoreboard players set @s achievement.nether_create_beacon 1
execute unless score nether_create_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_beacon=true}] at @s unless score @s achievement.nether_create_beacon matches 1.. run scoreboard players add nether_create_beacon achievement.claims 1
## A Furious Cocktail
execute unless score nether_all_potions achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_potions=true}] at @s unless score @s achievement.nether_all_potions matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_all_potions,limit=1] achievement.values
execute unless score nether_all_potions achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_potions=true}] at @s unless score @s achievement.nether_all_potions matches 1.. if entity @e[tag=achievement,tag=nether_all_potions,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_all_potions achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_potions=true}] at @s unless score @s achievement.nether_all_potions matches 1.. run function acrace:pick/take
execute unless score nether_all_potions achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_potions=true}] at @s unless score @s achievement.nether_all_potions matches 1.. run scoreboard players set @s achievement.nether_all_potions 1
execute unless score nether_all_potions achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_potions=true}] at @s unless score @s achievement.nether_all_potions matches 1.. run scoreboard players add nether_all_potions achievement.claims 1
## Beaconator
execute unless score nether_create_full_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_full_beacon=true}] at @s unless score @s achievement.nether_create_full_beacon matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_create_full_beacon,limit=1] achievement.values
execute unless score nether_create_full_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_full_beacon=true}] at @s unless score @s achievement.nether_create_full_beacon matches 1.. if entity @e[tag=achievement,tag=nether_create_full_beacon,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_create_full_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_full_beacon=true}] at @s unless score @s achievement.nether_create_full_beacon matches 1.. run function acrace:pick/take
execute unless score nether_create_full_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_full_beacon=true}] at @s unless score @s achievement.nether_create_full_beacon matches 1.. run scoreboard players set @s achievement.nether_create_full_beacon 1
execute unless score nether_create_full_beacon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/create_full_beacon=true}] at @s unless score @s achievement.nether_create_full_beacon matches 1.. run scoreboard players add nether_create_full_beacon achievement.claims 1
## How Did We Get Here?
execute unless score nether_all_effects achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_effects=true}] at @s unless score @s achievement.nether_all_effects matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=nether_all_effects,limit=1] achievement.values
execute unless score nether_all_effects achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_effects=true}] at @s unless score @s achievement.nether_all_effects matches 1.. if entity @e[tag=achievement,tag=nether_all_effects,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score nether_all_effects achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_effects=true}] at @s unless score @s achievement.nether_all_effects matches 1.. run function acrace:pick/take
execute unless score nether_all_effects achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_effects=true}] at @s unless score @s achievement.nether_all_effects matches 1.. run scoreboard players set @s achievement.nether_all_effects 1
execute unless score nether_all_effects achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:nether/all_effects=true}] at @s unless score @s achievement.nether_all_effects matches 1.. run scoreboard players add nether_all_effects achievement.claims 1
## Free the End
execute unless score end_kill_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/kill_dragon=true}] at @s unless score @s achievement.end_kill_dragon matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_kill_dragon,limit=1] achievement.values
execute unless score end_kill_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/kill_dragon=true}] at @s unless score @s achievement.end_kill_dragon matches 1.. if entity @e[tag=achievement,tag=end_kill_dragon,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_kill_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/kill_dragon=true}] at @s unless score @s achievement.end_kill_dragon matches 1.. run function acrace:pick/take
execute unless score end_kill_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/kill_dragon=true}] at @s unless score @s achievement.end_kill_dragon matches 1.. run scoreboard players set @s achievement.end_kill_dragon 1
execute unless score end_kill_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/kill_dragon=true}] at @s unless score @s achievement.end_kill_dragon matches 1.. run scoreboard players add end_kill_dragon achievement.claims 1
## The Next Generation
execute unless score end_dragon_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_egg=true}] at @s unless score @s achievement.end_dragon_egg matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_dragon_egg,limit=1] achievement.values
execute unless score end_dragon_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_egg=true}] at @s unless score @s achievement.end_dragon_egg matches 1.. if entity @e[tag=achievement,tag=end_dragon_egg,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_dragon_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_egg=true}] at @s unless score @s achievement.end_dragon_egg matches 1.. run function acrace:pick/take
execute unless score end_dragon_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_egg=true}] at @s unless score @s achievement.end_dragon_egg matches 1.. run scoreboard players set @s achievement.end_dragon_egg 1
execute unless score end_dragon_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_egg=true}] at @s unless score @s achievement.end_dragon_egg matches 1.. run scoreboard players add end_dragon_egg achievement.claims 1
## Remote Getaway
execute unless score end_enter_end_gateway achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/enter_end_gateway=true}] at @s unless score @s achievement.end_enter_end_gateway matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_enter_end_gateway,limit=1] achievement.values
execute unless score end_enter_end_gateway achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/enter_end_gateway=true}] at @s unless score @s achievement.end_enter_end_gateway matches 1.. if entity @e[tag=achievement,tag=end_enter_end_gateway,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_enter_end_gateway achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/enter_end_gateway=true}] at @s unless score @s achievement.end_enter_end_gateway matches 1.. run function acrace:pick/take
execute unless score end_enter_end_gateway achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/enter_end_gateway=true}] at @s unless score @s achievement.end_enter_end_gateway matches 1.. run scoreboard players set @s achievement.end_enter_end_gateway 1
execute unless score end_enter_end_gateway achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/enter_end_gateway=true}] at @s unless score @s achievement.end_enter_end_gateway matches 1.. run scoreboard players add end_enter_end_gateway achievement.claims 1
## The End... Again...
execute unless score end_respawn_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/respawn_dragon=true}] at @s unless score @s achievement.end_respawn_dragon matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_respawn_dragon,limit=1] achievement.values
execute unless score end_respawn_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/respawn_dragon=true}] at @s unless score @s achievement.end_respawn_dragon matches 1.. if entity @e[tag=achievement,tag=end_respawn_dragon,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_respawn_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/respawn_dragon=true}] at @s unless score @s achievement.end_respawn_dragon matches 1.. run function acrace:pick/take
execute unless score end_respawn_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/respawn_dragon=true}] at @s unless score @s achievement.end_respawn_dragon matches 1.. run scoreboard players set @s achievement.end_respawn_dragon 1
execute unless score end_respawn_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/respawn_dragon=true}] at @s unless score @s achievement.end_respawn_dragon matches 1.. run scoreboard players add end_respawn_dragon achievement.claims 1
## You Need a Mint
execute unless score end_dragon_breath achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_breath=true}] at @s unless score @s achievement.end_dragon_breath matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_dragon_breath,limit=1] achievement.values
execute unless score end_dragon_breath achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_breath=true}] at @s unless score @s achievement.end_dragon_breath matches 1.. if entity @e[tag=achievement,tag=end_dragon_breath,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_dragon_breath achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_breath=true}] at @s unless score @s achievement.end_dragon_breath matches 1.. run function acrace:pick/take
execute unless score end_dragon_breath achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_breath=true}] at @s unless score @s achievement.end_dragon_breath matches 1.. run scoreboard players set @s achievement.end_dragon_breath 1
execute unless score end_dragon_breath achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/dragon_breath=true}] at @s unless score @s achievement.end_dragon_breath matches 1.. run scoreboard players add end_dragon_breath achievement.claims 1
## The City at the End of the Game
execute unless score end_find_end_city achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/find_end_city=true}] at @s unless score @s achievement.end_find_end_city matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_find_end_city,limit=1] achievement.values
execute unless score end_find_end_city achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/find_end_city=true}] at @s unless score @s achievement.end_find_end_city matches 1.. if entity @e[tag=achievement,tag=end_find_end_city,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_find_end_city achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/find_end_city=true}] at @s unless score @s achievement.end_find_end_city matches 1.. run function acrace:pick/take
execute unless score end_find_end_city achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/find_end_city=true}] at @s unless score @s achievement.end_find_end_city matches 1.. run scoreboard players set @s achievement.end_find_end_city 1
execute unless score end_find_end_city achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/find_end_city=true}] at @s unless score @s achievement.end_find_end_city matches 1.. run scoreboard players add end_find_end_city achievement.claims 1
## Sky's the Limit
execute unless score end_elytra achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/elytra=true}] at @s unless score @s achievement.end_elytra matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_elytra,limit=1] achievement.values
execute unless score end_elytra achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/elytra=true}] at @s unless score @s achievement.end_elytra matches 1.. if entity @e[tag=achievement,tag=end_elytra,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_elytra achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/elytra=true}] at @s unless score @s achievement.end_elytra matches 1.. run function acrace:pick/take
execute unless score end_elytra achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/elytra=true}] at @s unless score @s achievement.end_elytra matches 1.. run scoreboard players set @s achievement.end_elytra 1
execute unless score end_elytra achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/elytra=true}] at @s unless score @s achievement.end_elytra matches 1.. run scoreboard players add end_elytra achievement.claims 1
## Great View From Up Here
execute unless score end_levitate achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/levitate=true}] at @s unless score @s achievement.end_levitate matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=end_levitate,limit=1] achievement.values
execute unless score end_levitate achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/levitate=true}] at @s unless score @s achievement.end_levitate matches 1.. if entity @e[tag=achievement,tag=end_levitate,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score end_levitate achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/levitate=true}] at @s unless score @s achievement.end_levitate matches 1.. run function acrace:pick/take
execute unless score end_levitate achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/levitate=true}] at @s unless score @s achievement.end_levitate matches 1.. run scoreboard players set @s achievement.end_levitate 1
execute unless score end_levitate achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:end/levitate=true}] at @s unless score @s achievement.end_levitate matches 1.. run scoreboard players add end_levitate achievement.claims 1
## Voluntary Exile
execute unless score adventure_voluntary_exile achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/voluntary_exile=true}] at @s unless score @s achievement.adventure_voluntary_exile matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_voluntary_exile,limit=1] achievement.values
execute unless score adventure_voluntary_exile achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/voluntary_exile=true}] at @s unless score @s achievement.adventure_voluntary_exile matches 1.. if entity @e[tag=achievement,tag=adventure_voluntary_exile,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_voluntary_exile achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/voluntary_exile=true}] at @s unless score @s achievement.adventure_voluntary_exile matches 1.. run function acrace:pick/take
execute unless score adventure_voluntary_exile achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/voluntary_exile=true}] at @s unless score @s achievement.adventure_voluntary_exile matches 1.. run scoreboard players set @s achievement.adventure_voluntary_exile 1
execute unless score adventure_voluntary_exile achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/voluntary_exile=true}] at @s unless score @s achievement.adventure_voluntary_exile matches 1.. run scoreboard players add adventure_voluntary_exile achievement.claims 1
## Is It a Bird?
execute unless score adventure_spyglass_at_parrot achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_parrot=true}] at @s unless score @s achievement.adventure_spyglass_at_parrot matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_spyglass_at_parrot,limit=1] achievement.values
execute unless score adventure_spyglass_at_parrot achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_parrot=true}] at @s unless score @s achievement.adventure_spyglass_at_parrot matches 1.. if entity @e[tag=achievement,tag=adventure_spyglass_at_parrot,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_spyglass_at_parrot achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_parrot=true}] at @s unless score @s achievement.adventure_spyglass_at_parrot matches 1.. run function acrace:pick/take
execute unless score adventure_spyglass_at_parrot achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_parrot=true}] at @s unless score @s achievement.adventure_spyglass_at_parrot matches 1.. run scoreboard players set @s achievement.adventure_spyglass_at_parrot 1
execute unless score adventure_spyglass_at_parrot achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_parrot=true}] at @s unless score @s achievement.adventure_spyglass_at_parrot matches 1.. run scoreboard players add adventure_spyglass_at_parrot achievement.claims 1
## Monster Hunter
execute unless score adventure_kill_a_mob achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_a_mob=true}] at @s unless score @s achievement.adventure_kill_a_mob matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_kill_a_mob,limit=1] achievement.values
execute unless score adventure_kill_a_mob achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_a_mob=true}] at @s unless score @s achievement.adventure_kill_a_mob matches 1.. if entity @e[tag=achievement,tag=adventure_kill_a_mob,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_kill_a_mob achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_a_mob=true}] at @s unless score @s achievement.adventure_kill_a_mob matches 1.. run function acrace:pick/take
execute unless score adventure_kill_a_mob achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_a_mob=true}] at @s unless score @s achievement.adventure_kill_a_mob matches 1.. run scoreboard players set @s achievement.adventure_kill_a_mob 1
execute unless score adventure_kill_a_mob achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_a_mob=true}] at @s unless score @s achievement.adventure_kill_a_mob matches 1.. run scoreboard players add adventure_kill_a_mob achievement.claims 1
## Creeper?
execute unless score adventure_kill_creeper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_creeper=true}] at @s unless score @s achievement.adventure_kill_creeper matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_kill_creeper,limit=1] achievement.values
execute unless score adventure_kill_creeper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_creeper=true}] at @s unless score @s achievement.adventure_kill_creeper matches 1.. if entity @e[tag=achievement,tag=adventure_kill_creeper,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_kill_creeper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_creeper=true}] at @s unless score @s achievement.adventure_kill_creeper matches 1.. run function acrace:pick/take
execute unless score adventure_kill_creeper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_creeper=true}] at @s unless score @s achievement.adventure_kill_creeper matches 1.. run scoreboard players set @s achievement.adventure_kill_creeper 1
execute unless score adventure_kill_creeper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_creeper=true}] at @s unless score @s achievement.adventure_kill_creeper matches 1.. run scoreboard players add adventure_kill_creeper achievement.claims 1
## What a Deal!
execute unless score adventure_trade achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade=true}] at @s unless score @s achievement.adventure_trade matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_trade,limit=1] achievement.values
execute unless score adventure_trade achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade=true}] at @s unless score @s achievement.adventure_trade matches 1.. if entity @e[tag=achievement,tag=adventure_trade,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_trade achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade=true}] at @s unless score @s achievement.adventure_trade matches 1.. run function acrace:pick/take
execute unless score adventure_trade achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade=true}] at @s unless score @s achievement.adventure_trade matches 1.. run scoreboard players set @s achievement.adventure_trade 1
execute unless score adventure_trade achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade=true}] at @s unless score @s achievement.adventure_trade matches 1.. run scoreboard players add adventure_trade achievement.claims 1
## Sticky Situation
execute unless score adventure_honey_block_slide achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/honey_block_slide=true}] at @s unless score @s achievement.adventure_honey_block_slide matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_honey_block_slide,limit=1] achievement.values
execute unless score adventure_honey_block_slide achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/honey_block_slide=true}] at @s unless score @s achievement.adventure_honey_block_slide matches 1.. if entity @e[tag=achievement,tag=adventure_honey_block_slide,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_honey_block_slide achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/honey_block_slide=true}] at @s unless score @s achievement.adventure_honey_block_slide matches 1.. run function acrace:pick/take
execute unless score adventure_honey_block_slide achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/honey_block_slide=true}] at @s unless score @s achievement.adventure_honey_block_slide matches 1.. run scoreboard players set @s achievement.adventure_honey_block_slide 1
execute unless score adventure_honey_block_slide achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/honey_block_slide=true}] at @s unless score @s achievement.adventure_honey_block_slide matches 1.. run scoreboard players add adventure_honey_block_slide achievement.claims 1
## Ol' Betsy
execute unless score adventure_ol_betsy achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/ol_betsy=true}] at @s unless score @s achievement.adventure_ol_betsy matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_ol_betsy,limit=1] achievement.values
execute unless score adventure_ol_betsy achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/ol_betsy=true}] at @s unless score @s achievement.adventure_ol_betsy matches 1.. if entity @e[tag=achievement,tag=adventure_ol_betsy,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_ol_betsy achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/ol_betsy=true}] at @s unless score @s achievement.adventure_ol_betsy matches 1.. run function acrace:pick/take
execute unless score adventure_ol_betsy achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/ol_betsy=true}] at @s unless score @s achievement.adventure_ol_betsy matches 1.. run scoreboard players set @s achievement.adventure_ol_betsy 1
execute unless score adventure_ol_betsy achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/ol_betsy=true}] at @s unless score @s achievement.adventure_ol_betsy matches 1.. run scoreboard players add adventure_ol_betsy achievement.claims 1
## Surge Protector
execute unless score adventure_lightning_rod_with_villager_no_fire achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/lightning_rod_with_villager_no_fire=true}] at @s unless score @s achievement.adventure_lightning_rod_with_villager_no_fire matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_lightning_rod_with_villager_no_fire,limit=1] achievement.values
execute unless score adventure_lightning_rod_with_villager_no_fire achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/lightning_rod_with_villager_no_fire=true}] at @s unless score @s achievement.adventure_lightning_rod_with_villager_no_fire matches 1.. if entity @e[tag=achievement,tag=adventure_lightning_rod_with_villager_no_fire,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_lightning_rod_with_villager_no_fire achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/lightning_rod_with_villager_no_fire=true}] at @s unless score @s achievement.adventure_lightning_rod_with_villager_no_fire matches 1.. run function acrace:pick/take
execute unless score adventure_lightning_rod_with_villager_no_fire achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/lightning_rod_with_villager_no_fire=true}] at @s unless score @s achievement.adventure_lightning_rod_with_villager_no_fire matches 1.. run scoreboard players set @s achievement.adventure_lightning_rod_with_villager_no_fire 1
execute unless score adventure_lightning_rod_with_villager_no_fire achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/lightning_rod_with_villager_no_fire=true}] at @s unless score @s achievement.adventure_lightning_rod_with_villager_no_fire matches 1.. run scoreboard players add adventure_lightning_rod_with_villager_no_fire achievement.claims 1
## Spelunker
execute unless score adventure_spelunker achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spelunker=true}] at @s unless score @s achievement.adventure_spelunker matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_spelunker,limit=1] achievement.values
execute unless score adventure_spelunker achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spelunker=true}] at @s unless score @s achievement.adventure_spelunker matches 1.. if entity @e[tag=achievement,tag=adventure_spelunker,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_spelunker achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spelunker=true}] at @s unless score @s achievement.adventure_spelunker matches 1.. run function acrace:pick/take
execute unless score adventure_spelunker achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spelunker=true}] at @s unless score @s achievement.adventure_spelunker matches 1.. run scoreboard players set @s achievement.adventure_spelunker 1
execute unless score adventure_spelunker achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spelunker=true}] at @s unless score @s achievement.adventure_spelunker matches 1.. run scoreboard players add adventure_spelunker achievement.claims 1
## Caves & Cliffs
execute unless score adventure_fall_from_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/fall_from_world_height=true}] at @s unless score @s achievement.adventure_fall_from_world_height matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_fall_from_world_height,limit=1] achievement.values
execute unless score adventure_fall_from_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/fall_from_world_height=true}] at @s unless score @s achievement.adventure_fall_from_world_height matches 1.. if entity @e[tag=achievement,tag=adventure_fall_from_world_height,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_fall_from_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/fall_from_world_height=true}] at @s unless score @s achievement.adventure_fall_from_world_height matches 1.. run function acrace:pick/take
execute unless score adventure_fall_from_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/fall_from_world_height=true}] at @s unless score @s achievement.adventure_fall_from_world_height matches 1.. run scoreboard players set @s achievement.adventure_fall_from_world_height 1
execute unless score adventure_fall_from_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/fall_from_world_height=true}] at @s unless score @s achievement.adventure_fall_from_world_height matches 1.. run scoreboard players add adventure_fall_from_world_height achievement.claims 1
## Sneak 100
execute unless score adventure_avoid_vibration achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/avoid_vibration=true}] at @s unless score @s achievement.adventure_avoid_vibration matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_avoid_vibration,limit=1] achievement.values
execute unless score adventure_avoid_vibration achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/avoid_vibration=true}] at @s unless score @s achievement.adventure_avoid_vibration matches 1.. if entity @e[tag=achievement,tag=adventure_avoid_vibration,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_avoid_vibration achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/avoid_vibration=true}] at @s unless score @s achievement.adventure_avoid_vibration matches 1.. run function acrace:pick/take
execute unless score adventure_avoid_vibration achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/avoid_vibration=true}] at @s unless score @s achievement.adventure_avoid_vibration matches 1.. run scoreboard players set @s achievement.adventure_avoid_vibration 1
execute unless score adventure_avoid_vibration achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/avoid_vibration=true}] at @s unless score @s achievement.adventure_avoid_vibration matches 1.. run scoreboard players add adventure_avoid_vibration achievement.claims 1
## Sweet Dreams
execute unless score adventure_sleep_in_bed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sleep_in_bed=true}] at @s unless score @s achievement.adventure_sleep_in_bed matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_sleep_in_bed,limit=1] achievement.values
execute unless score adventure_sleep_in_bed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sleep_in_bed=true}] at @s unless score @s achievement.adventure_sleep_in_bed matches 1.. if entity @e[tag=achievement,tag=adventure_sleep_in_bed,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_sleep_in_bed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sleep_in_bed=true}] at @s unless score @s achievement.adventure_sleep_in_bed matches 1.. run function acrace:pick/take
execute unless score adventure_sleep_in_bed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sleep_in_bed=true}] at @s unless score @s achievement.adventure_sleep_in_bed matches 1.. run scoreboard players set @s achievement.adventure_sleep_in_bed 1
execute unless score adventure_sleep_in_bed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sleep_in_bed=true}] at @s unless score @s achievement.adventure_sleep_in_bed matches 1.. run scoreboard players add adventure_sleep_in_bed achievement.claims 1
## Hero of the Village
execute unless score adventure_hero_of_the_village achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/hero_of_the_village=true}] at @s unless score @s achievement.adventure_hero_of_the_village matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_hero_of_the_village,limit=1] achievement.values
execute unless score adventure_hero_of_the_village achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/hero_of_the_village=true}] at @s unless score @s achievement.adventure_hero_of_the_village matches 1.. if entity @e[tag=achievement,tag=adventure_hero_of_the_village,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_hero_of_the_village achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/hero_of_the_village=true}] at @s unless score @s achievement.adventure_hero_of_the_village matches 1.. run function acrace:pick/take
execute unless score adventure_hero_of_the_village achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/hero_of_the_village=true}] at @s unless score @s achievement.adventure_hero_of_the_village matches 1.. run scoreboard players set @s achievement.adventure_hero_of_the_village 1
execute unless score adventure_hero_of_the_village achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/hero_of_the_village=true}] at @s unless score @s achievement.adventure_hero_of_the_village matches 1.. run scoreboard players add adventure_hero_of_the_village achievement.claims 1
## Is It a Balloon?
execute unless score adventure_spyglass_at_ghast achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_ghast=true}] at @s unless score @s achievement.adventure_spyglass_at_ghast matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_spyglass_at_ghast,limit=1] achievement.values
execute unless score adventure_spyglass_at_ghast achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_ghast=true}] at @s unless score @s achievement.adventure_spyglass_at_ghast matches 1.. if entity @e[tag=achievement,tag=adventure_spyglass_at_ghast,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_spyglass_at_ghast achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_ghast=true}] at @s unless score @s achievement.adventure_spyglass_at_ghast matches 1.. run function acrace:pick/take
execute unless score adventure_spyglass_at_ghast achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_ghast=true}] at @s unless score @s achievement.adventure_spyglass_at_ghast matches 1.. run scoreboard players set @s achievement.adventure_spyglass_at_ghast 1
execute unless score adventure_spyglass_at_ghast achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_ghast=true}] at @s unless score @s achievement.adventure_spyglass_at_ghast matches 1.. run scoreboard players add adventure_spyglass_at_ghast achievement.claims 1
## A Throwaway Joke
execute unless score adventure_throw_trident achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/throw_trident=true}] at @s unless score @s achievement.adventure_throw_trident matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_throw_trident,limit=1] achievement.values
execute unless score adventure_throw_trident achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/throw_trident=true}] at @s unless score @s achievement.adventure_throw_trident matches 1.. if entity @e[tag=achievement,tag=adventure_throw_trident,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_throw_trident achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/throw_trident=true}] at @s unless score @s achievement.adventure_throw_trident matches 1.. run function acrace:pick/take
execute unless score adventure_throw_trident achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/throw_trident=true}] at @s unless score @s achievement.adventure_throw_trident matches 1.. run scoreboard players set @s achievement.adventure_throw_trident 1
execute unless score adventure_throw_trident achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/throw_trident=true}] at @s unless score @s achievement.adventure_throw_trident matches 1.. run scoreboard players add adventure_throw_trident achievement.claims 1
## It Spreads
execute unless score adventure_kill_mob_near_sculk_catalyst achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_mob_near_sculk_catalyst=true}] at @s unless score @s achievement.adventure_kill_mob_near_sculk_catalyst matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_kill_mob_near_sculk_catalyst,limit=1] achievement.values
execute unless score adventure_kill_mob_near_sculk_catalyst achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_mob_near_sculk_catalyst=true}] at @s unless score @s achievement.adventure_kill_mob_near_sculk_catalyst matches 1.. if entity @e[tag=achievement,tag=adventure_kill_mob_near_sculk_catalyst,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_kill_mob_near_sculk_catalyst achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_mob_near_sculk_catalyst=true}] at @s unless score @s achievement.adventure_kill_mob_near_sculk_catalyst matches 1.. run function acrace:pick/take
execute unless score adventure_kill_mob_near_sculk_catalyst achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_mob_near_sculk_catalyst=true}] at @s unless score @s achievement.adventure_kill_mob_near_sculk_catalyst matches 1.. run scoreboard players set @s achievement.adventure_kill_mob_near_sculk_catalyst 1
execute unless score adventure_kill_mob_near_sculk_catalyst achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_mob_near_sculk_catalyst=true}] at @s unless score @s achievement.adventure_kill_mob_near_sculk_catalyst matches 1.. run scoreboard players add adventure_kill_mob_near_sculk_catalyst achievement.claims 1
## Take Aim
execute unless score adventure_shoot_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/shoot_arrow=true}] at @s unless score @s achievement.adventure_shoot_arrow matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_shoot_arrow,limit=1] achievement.values
execute unless score adventure_shoot_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/shoot_arrow=true}] at @s unless score @s achievement.adventure_shoot_arrow matches 1.. if entity @e[tag=achievement,tag=adventure_shoot_arrow,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_shoot_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/shoot_arrow=true}] at @s unless score @s achievement.adventure_shoot_arrow matches 1.. run function acrace:pick/take
execute unless score adventure_shoot_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/shoot_arrow=true}] at @s unless score @s achievement.adventure_shoot_arrow matches 1.. run scoreboard players set @s achievement.adventure_shoot_arrow 1
execute unless score adventure_shoot_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/shoot_arrow=true}] at @s unless score @s achievement.adventure_shoot_arrow matches 1.. run scoreboard players add adventure_shoot_arrow achievement.claims 1
## Monsters Hunted
execute unless score adventure_kill_all_mobs achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_all_mobs=true}] at @s unless score @s achievement.adventure_kill_all_mobs matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_kill_all_mobs,limit=1] achievement.values
execute unless score adventure_kill_all_mobs achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_all_mobs=true}] at @s unless score @s achievement.adventure_kill_all_mobs matches 1.. if entity @e[tag=achievement,tag=adventure_kill_all_mobs,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_kill_all_mobs achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_all_mobs=true}] at @s unless score @s achievement.adventure_kill_all_mobs matches 1.. run function acrace:pick/take
execute unless score adventure_kill_all_mobs achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_all_mobs=true}] at @s unless score @s achievement.adventure_kill_all_mobs matches 1.. run scoreboard players set @s achievement.adventure_kill_all_mobs 1
execute unless score adventure_kill_all_mobs achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/kill_all_mobs=true}] at @s unless score @s achievement.adventure_kill_all_mobs matches 1.. run scoreboard players add adventure_kill_all_mobs achievement.claims 1
## Postmortal
execute unless score adventure_totem_of_undying achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/totem_of_undying=true}] at @s unless score @s achievement.adventure_totem_of_undying matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_totem_of_undying,limit=1] achievement.values
execute unless score adventure_totem_of_undying achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/totem_of_undying=true}] at @s unless score @s achievement.adventure_totem_of_undying matches 1.. if entity @e[tag=achievement,tag=adventure_totem_of_undying,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_totem_of_undying achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/totem_of_undying=true}] at @s unless score @s achievement.adventure_totem_of_undying matches 1.. run function acrace:pick/take
execute unless score adventure_totem_of_undying achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/totem_of_undying=true}] at @s unless score @s achievement.adventure_totem_of_undying matches 1.. run scoreboard players set @s achievement.adventure_totem_of_undying 1
execute unless score adventure_totem_of_undying achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/totem_of_undying=true}] at @s unless score @s achievement.adventure_totem_of_undying matches 1.. run scoreboard players add adventure_totem_of_undying achievement.claims 1
## Hired Help
execute unless score adventure_summon_iron_golem achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/summon_iron_golem=true}] at @s unless score @s achievement.adventure_summon_iron_golem matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_summon_iron_golem,limit=1] achievement.values
execute unless score adventure_summon_iron_golem achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/summon_iron_golem=true}] at @s unless score @s achievement.adventure_summon_iron_golem matches 1.. if entity @e[tag=achievement,tag=adventure_summon_iron_golem,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_summon_iron_golem achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/summon_iron_golem=true}] at @s unless score @s achievement.adventure_summon_iron_golem matches 1.. run function acrace:pick/take
execute unless score adventure_summon_iron_golem achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/summon_iron_golem=true}] at @s unless score @s achievement.adventure_summon_iron_golem matches 1.. run scoreboard players set @s achievement.adventure_summon_iron_golem 1
execute unless score adventure_summon_iron_golem achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/summon_iron_golem=true}] at @s unless score @s achievement.adventure_summon_iron_golem matches 1.. run scoreboard players add adventure_summon_iron_golem achievement.claims 1
## Star Trader
execute unless score adventure_trade_at_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade_at_world_height=true}] at @s unless score @s achievement.adventure_trade_at_world_height matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_trade_at_world_height,limit=1] achievement.values
execute unless score adventure_trade_at_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade_at_world_height=true}] at @s unless score @s achievement.adventure_trade_at_world_height matches 1.. if entity @e[tag=achievement,tag=adventure_trade_at_world_height,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_trade_at_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade_at_world_height=true}] at @s unless score @s achievement.adventure_trade_at_world_height matches 1.. run function acrace:pick/take
execute unless score adventure_trade_at_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade_at_world_height=true}] at @s unless score @s achievement.adventure_trade_at_world_height matches 1.. run scoreboard players set @s achievement.adventure_trade_at_world_height 1
execute unless score adventure_trade_at_world_height achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trade_at_world_height=true}] at @s unless score @s achievement.adventure_trade_at_world_height matches 1.. run scoreboard players add adventure_trade_at_world_height achievement.claims 1
## Two Birds, One Arrow
execute unless score adventure_two_birds_one_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/two_birds_one_arrow=true}] at @s unless score @s achievement.adventure_two_birds_one_arrow matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_two_birds_one_arrow,limit=1] achievement.values
execute unless score adventure_two_birds_one_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/two_birds_one_arrow=true}] at @s unless score @s achievement.adventure_two_birds_one_arrow matches 1.. if entity @e[tag=achievement,tag=adventure_two_birds_one_arrow,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_two_birds_one_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/two_birds_one_arrow=true}] at @s unless score @s achievement.adventure_two_birds_one_arrow matches 1.. run function acrace:pick/take
execute unless score adventure_two_birds_one_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/two_birds_one_arrow=true}] at @s unless score @s achievement.adventure_two_birds_one_arrow matches 1.. run scoreboard players set @s achievement.adventure_two_birds_one_arrow 1
execute unless score adventure_two_birds_one_arrow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/two_birds_one_arrow=true}] at @s unless score @s achievement.adventure_two_birds_one_arrow matches 1.. run scoreboard players add adventure_two_birds_one_arrow achievement.claims 1
## Who's the Pillager Now?
execute unless score adventure_whos_the_pillager_now achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/whos_the_pillager_now=true}] at @s unless score @s achievement.adventure_whos_the_pillager_now matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_whos_the_pillager_now,limit=1] achievement.values
execute unless score adventure_whos_the_pillager_now achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/whos_the_pillager_now=true}] at @s unless score @s achievement.adventure_whos_the_pillager_now matches 1.. if entity @e[tag=achievement,tag=adventure_whos_the_pillager_now,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_whos_the_pillager_now achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/whos_the_pillager_now=true}] at @s unless score @s achievement.adventure_whos_the_pillager_now matches 1.. run function acrace:pick/take
execute unless score adventure_whos_the_pillager_now achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/whos_the_pillager_now=true}] at @s unless score @s achievement.adventure_whos_the_pillager_now matches 1.. run scoreboard players set @s achievement.adventure_whos_the_pillager_now 1
execute unless score adventure_whos_the_pillager_now achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/whos_the_pillager_now=true}] at @s unless score @s achievement.adventure_whos_the_pillager_now matches 1.. run scoreboard players add adventure_whos_the_pillager_now achievement.claims 1
## Arbalistic
execute unless score adventure_arbalistic achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/arbalistic=true}] at @s unless score @s achievement.adventure_arbalistic matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_arbalistic,limit=1] achievement.values
execute unless score adventure_arbalistic achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/arbalistic=true}] at @s unless score @s achievement.adventure_arbalistic matches 1.. if entity @e[tag=achievement,tag=adventure_arbalistic,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_arbalistic achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/arbalistic=true}] at @s unless score @s achievement.adventure_arbalistic matches 1.. run function acrace:pick/take
execute unless score adventure_arbalistic achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/arbalistic=true}] at @s unless score @s achievement.adventure_arbalistic matches 1.. run scoreboard players set @s achievement.adventure_arbalistic 1
execute unless score adventure_arbalistic achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/arbalistic=true}] at @s unless score @s achievement.adventure_arbalistic matches 1.. run scoreboard players add adventure_arbalistic achievement.claims 1
## Adventuring Time
execute unless score adventure_adventuring_time achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/adventuring_time=true}] at @s unless score @s achievement.adventure_adventuring_time matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_adventuring_time,limit=1] achievement.values
execute unless score adventure_adventuring_time achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/adventuring_time=true}] at @s unless score @s achievement.adventure_adventuring_time matches 1.. if entity @e[tag=achievement,tag=adventure_adventuring_time,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_adventuring_time achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/adventuring_time=true}] at @s unless score @s achievement.adventure_adventuring_time matches 1.. run function acrace:pick/take
execute unless score adventure_adventuring_time achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/adventuring_time=true}] at @s unless score @s achievement.adventure_adventuring_time matches 1.. run scoreboard players set @s achievement.adventure_adventuring_time 1
execute unless score adventure_adventuring_time achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/adventuring_time=true}] at @s unless score @s achievement.adventure_adventuring_time matches 1.. run scoreboard players add adventure_adventuring_time achievement.claims 1
## Sound of Music
execute unless score adventure_play_jukebox_in_meadows achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/play_jukebox_in_meadows=true}] at @s unless score @s achievement.adventure_play_jukebox_in_meadows matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_play_jukebox_in_meadows,limit=1] achievement.values
execute unless score adventure_play_jukebox_in_meadows achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/play_jukebox_in_meadows=true}] at @s unless score @s achievement.adventure_play_jukebox_in_meadows matches 1.. if entity @e[tag=achievement,tag=adventure_play_jukebox_in_meadows,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_play_jukebox_in_meadows achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/play_jukebox_in_meadows=true}] at @s unless score @s achievement.adventure_play_jukebox_in_meadows matches 1.. run function acrace:pick/take
execute unless score adventure_play_jukebox_in_meadows achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/play_jukebox_in_meadows=true}] at @s unless score @s achievement.adventure_play_jukebox_in_meadows matches 1.. run scoreboard players set @s achievement.adventure_play_jukebox_in_meadows 1
execute unless score adventure_play_jukebox_in_meadows achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/play_jukebox_in_meadows=true}] at @s unless score @s achievement.adventure_play_jukebox_in_meadows matches 1.. run scoreboard players add adventure_play_jukebox_in_meadows achievement.claims 1
## Light as a Rabbit
execute unless score adventure_walk_on_powder_snow_with_leather_boots achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/walk_on_powder_snow_with_leather_boots=true}] at @s unless score @s achievement.adventure_walk_on_powder_snow_with_leather_boots matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_walk_on_powder_snow_with_leather_boots,limit=1] achievement.values
execute unless score adventure_walk_on_powder_snow_with_leather_boots achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/walk_on_powder_snow_with_leather_boots=true}] at @s unless score @s achievement.adventure_walk_on_powder_snow_with_leather_boots matches 1.. if entity @e[tag=achievement,tag=adventure_walk_on_powder_snow_with_leather_boots,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_walk_on_powder_snow_with_leather_boots achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/walk_on_powder_snow_with_leather_boots=true}] at @s unless score @s achievement.adventure_walk_on_powder_snow_with_leather_boots matches 1.. run function acrace:pick/take
execute unless score adventure_walk_on_powder_snow_with_leather_boots achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/walk_on_powder_snow_with_leather_boots=true}] at @s unless score @s achievement.adventure_walk_on_powder_snow_with_leather_boots matches 1.. run scoreboard players set @s achievement.adventure_walk_on_powder_snow_with_leather_boots 1
execute unless score adventure_walk_on_powder_snow_with_leather_boots achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/walk_on_powder_snow_with_leather_boots=true}] at @s unless score @s achievement.adventure_walk_on_powder_snow_with_leather_boots matches 1.. run scoreboard players add adventure_walk_on_powder_snow_with_leather_boots achievement.claims 1
## Is It a Plane?
execute unless score adventure_spyglass_at_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_dragon=true}] at @s unless score @s achievement.adventure_spyglass_at_dragon matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_spyglass_at_dragon,limit=1] achievement.values
execute unless score adventure_spyglass_at_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_dragon=true}] at @s unless score @s achievement.adventure_spyglass_at_dragon matches 1.. if entity @e[tag=achievement,tag=adventure_spyglass_at_dragon,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_spyglass_at_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_dragon=true}] at @s unless score @s achievement.adventure_spyglass_at_dragon matches 1.. run function acrace:pick/take
execute unless score adventure_spyglass_at_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_dragon=true}] at @s unless score @s achievement.adventure_spyglass_at_dragon matches 1.. run scoreboard players set @s achievement.adventure_spyglass_at_dragon 1
execute unless score adventure_spyglass_at_dragon achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/spyglass_at_dragon=true}] at @s unless score @s achievement.adventure_spyglass_at_dragon matches 1.. run scoreboard players add adventure_spyglass_at_dragon achievement.claims 1
## Very Very Frightening
execute unless score adventure_very_very_frightening achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/very_very_frightening=true}] at @s unless score @s achievement.adventure_very_very_frightening matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_very_very_frightening,limit=1] achievement.values
execute unless score adventure_very_very_frightening achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/very_very_frightening=true}] at @s unless score @s achievement.adventure_very_very_frightening matches 1.. if entity @e[tag=achievement,tag=adventure_very_very_frightening,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_very_very_frightening achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/very_very_frightening=true}] at @s unless score @s achievement.adventure_very_very_frightening matches 1.. run function acrace:pick/take
execute unless score adventure_very_very_frightening achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/very_very_frightening=true}] at @s unless score @s achievement.adventure_very_very_frightening matches 1.. run scoreboard players set @s achievement.adventure_very_very_frightening 1
execute unless score adventure_very_very_frightening achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/very_very_frightening=true}] at @s unless score @s achievement.adventure_very_very_frightening matches 1.. run scoreboard players add adventure_very_very_frightening achievement.claims 1
## Sniper Duel
execute unless score adventure_sniper_duel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sniper_duel=true}] at @s unless score @s achievement.adventure_sniper_duel matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_sniper_duel,limit=1] achievement.values
execute unless score adventure_sniper_duel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sniper_duel=true}] at @s unless score @s achievement.adventure_sniper_duel matches 1.. if entity @e[tag=achievement,tag=adventure_sniper_duel,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_sniper_duel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sniper_duel=true}] at @s unless score @s achievement.adventure_sniper_duel matches 1.. run function acrace:pick/take
execute unless score adventure_sniper_duel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sniper_duel=true}] at @s unless score @s achievement.adventure_sniper_duel matches 1.. run scoreboard players set @s achievement.adventure_sniper_duel 1
execute unless score adventure_sniper_duel achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/sniper_duel=true}] at @s unless score @s achievement.adventure_sniper_duel matches 1.. run scoreboard players add adventure_sniper_duel achievement.claims 1
## Bullseye
execute unless score adventure_bullseye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/bullseye=true}] at @s unless score @s achievement.adventure_bullseye matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_bullseye,limit=1] achievement.values
execute unless score adventure_bullseye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/bullseye=true}] at @s unless score @s achievement.adventure_bullseye matches 1.. if entity @e[tag=achievement,tag=adventure_bullseye,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_bullseye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/bullseye=true}] at @s unless score @s achievement.adventure_bullseye matches 1.. run function acrace:pick/take
execute unless score adventure_bullseye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/bullseye=true}] at @s unless score @s achievement.adventure_bullseye matches 1.. run scoreboard players set @s achievement.adventure_bullseye 1
execute unless score adventure_bullseye achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/bullseye=true}] at @s unless score @s achievement.adventure_bullseye matches 1.. run scoreboard players add adventure_bullseye achievement.claims 1
## Bee Our Guest
execute unless score husbandry_safely_harvest_honey achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/safely_harvest_honey=true}] at @s unless score @s achievement.husbandry_safely_harvest_honey matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_safely_harvest_honey,limit=1] achievement.values
execute unless score husbandry_safely_harvest_honey achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/safely_harvest_honey=true}] at @s unless score @s achievement.husbandry_safely_harvest_honey matches 1.. if entity @e[tag=achievement,tag=husbandry_safely_harvest_honey,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_safely_harvest_honey achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/safely_harvest_honey=true}] at @s unless score @s achievement.husbandry_safely_harvest_honey matches 1.. run function acrace:pick/take
execute unless score husbandry_safely_harvest_honey achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/safely_harvest_honey=true}] at @s unless score @s achievement.husbandry_safely_harvest_honey matches 1.. run scoreboard players set @s achievement.husbandry_safely_harvest_honey 1
execute unless score husbandry_safely_harvest_honey achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/safely_harvest_honey=true}] at @s unless score @s achievement.husbandry_safely_harvest_honey matches 1.. run scoreboard players add husbandry_safely_harvest_honey achievement.claims 1
## The Parrots and the Bats
execute unless score husbandry_breed_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/breed_an_animal=true}] at @s unless score @s achievement.husbandry_breed_an_animal matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_breed_an_animal,limit=1] achievement.values
execute unless score husbandry_breed_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/breed_an_animal=true}] at @s unless score @s achievement.husbandry_breed_an_animal matches 1.. if entity @e[tag=achievement,tag=husbandry_breed_an_animal,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_breed_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/breed_an_animal=true}] at @s unless score @s achievement.husbandry_breed_an_animal matches 1.. run function acrace:pick/take
execute unless score husbandry_breed_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/breed_an_animal=true}] at @s unless score @s achievement.husbandry_breed_an_animal matches 1.. run scoreboard players set @s achievement.husbandry_breed_an_animal 1
execute unless score husbandry_breed_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/breed_an_animal=true}] at @s unless score @s achievement.husbandry_breed_an_animal matches 1.. run scoreboard players add husbandry_breed_an_animal achievement.claims 1
## You've Got a Friend in Me
execute unless score husbandry_allay_deliver_item_to_player achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_item_to_player=true}] at @s unless score @s achievement.husbandry_allay_deliver_item_to_player matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_allay_deliver_item_to_player,limit=1] achievement.values
execute unless score husbandry_allay_deliver_item_to_player achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_item_to_player=true}] at @s unless score @s achievement.husbandry_allay_deliver_item_to_player matches 1.. if entity @e[tag=achievement,tag=husbandry_allay_deliver_item_to_player,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_allay_deliver_item_to_player achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_item_to_player=true}] at @s unless score @s achievement.husbandry_allay_deliver_item_to_player matches 1.. run function acrace:pick/take
execute unless score husbandry_allay_deliver_item_to_player achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_item_to_player=true}] at @s unless score @s achievement.husbandry_allay_deliver_item_to_player matches 1.. run scoreboard players set @s achievement.husbandry_allay_deliver_item_to_player 1
execute unless score husbandry_allay_deliver_item_to_player achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_item_to_player=true}] at @s unless score @s achievement.husbandry_allay_deliver_item_to_player matches 1.. run scoreboard players add husbandry_allay_deliver_item_to_player achievement.claims 1
## Whatever Floats Your Goat!
execute unless score husbandry_ride_a_boat_with_a_goat achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/ride_a_boat_with_a_goat=true}] at @s unless score @s achievement.husbandry_ride_a_boat_with_a_goat matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_ride_a_boat_with_a_goat,limit=1] achievement.values
execute unless score husbandry_ride_a_boat_with_a_goat achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/ride_a_boat_with_a_goat=true}] at @s unless score @s achievement.husbandry_ride_a_boat_with_a_goat matches 1.. if entity @e[tag=achievement,tag=husbandry_ride_a_boat_with_a_goat,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_ride_a_boat_with_a_goat achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/ride_a_boat_with_a_goat=true}] at @s unless score @s achievement.husbandry_ride_a_boat_with_a_goat matches 1.. run function acrace:pick/take
execute unless score husbandry_ride_a_boat_with_a_goat achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/ride_a_boat_with_a_goat=true}] at @s unless score @s achievement.husbandry_ride_a_boat_with_a_goat matches 1.. run scoreboard players set @s achievement.husbandry_ride_a_boat_with_a_goat 1
execute unless score husbandry_ride_a_boat_with_a_goat achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/ride_a_boat_with_a_goat=true}] at @s unless score @s achievement.husbandry_ride_a_boat_with_a_goat matches 1.. run scoreboard players add husbandry_ride_a_boat_with_a_goat achievement.claims 1
## Best Friends Forever
execute unless score husbandry_tame_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tame_an_animal=true}] at @s unless score @s achievement.husbandry_tame_an_animal matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_tame_an_animal,limit=1] achievement.values
execute unless score husbandry_tame_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tame_an_animal=true}] at @s unless score @s achievement.husbandry_tame_an_animal matches 1.. if entity @e[tag=achievement,tag=husbandry_tame_an_animal,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_tame_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tame_an_animal=true}] at @s unless score @s achievement.husbandry_tame_an_animal matches 1.. run function acrace:pick/take
execute unless score husbandry_tame_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tame_an_animal=true}] at @s unless score @s achievement.husbandry_tame_an_animal matches 1.. run scoreboard players set @s achievement.husbandry_tame_an_animal 1
execute unless score husbandry_tame_an_animal achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tame_an_animal=true}] at @s unless score @s achievement.husbandry_tame_an_animal matches 1.. run scoreboard players add husbandry_tame_an_animal achievement.claims 1
## Glow and Behold!
execute unless score husbandry_make_a_sign_glow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/make_a_sign_glow=true}] at @s unless score @s achievement.husbandry_make_a_sign_glow matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_make_a_sign_glow,limit=1] achievement.values
execute unless score husbandry_make_a_sign_glow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/make_a_sign_glow=true}] at @s unless score @s achievement.husbandry_make_a_sign_glow matches 1.. if entity @e[tag=achievement,tag=husbandry_make_a_sign_glow,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_make_a_sign_glow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/make_a_sign_glow=true}] at @s unless score @s achievement.husbandry_make_a_sign_glow matches 1.. run function acrace:pick/take
execute unless score husbandry_make_a_sign_glow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/make_a_sign_glow=true}] at @s unless score @s achievement.husbandry_make_a_sign_glow matches 1.. run scoreboard players set @s achievement.husbandry_make_a_sign_glow 1
execute unless score husbandry_make_a_sign_glow achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/make_a_sign_glow=true}] at @s unless score @s achievement.husbandry_make_a_sign_glow matches 1.. run scoreboard players add husbandry_make_a_sign_glow achievement.claims 1
## Fishy Business
execute unless score husbandry_fishy_business achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/fishy_business=true}] at @s unless score @s achievement.husbandry_fishy_business matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_fishy_business,limit=1] achievement.values
execute unless score husbandry_fishy_business achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/fishy_business=true}] at @s unless score @s achievement.husbandry_fishy_business matches 1.. if entity @e[tag=achievement,tag=husbandry_fishy_business,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_fishy_business achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/fishy_business=true}] at @s unless score @s achievement.husbandry_fishy_business matches 1.. run function acrace:pick/take
execute unless score husbandry_fishy_business achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/fishy_business=true}] at @s unless score @s achievement.husbandry_fishy_business matches 1.. run scoreboard players set @s achievement.husbandry_fishy_business 1
execute unless score husbandry_fishy_business achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/fishy_business=true}] at @s unless score @s achievement.husbandry_fishy_business matches 1.. run scoreboard players add husbandry_fishy_business achievement.claims 1
## Total Beelocation
execute unless score husbandry_silk_touch_nest achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/silk_touch_nest=true}] at @s unless score @s achievement.husbandry_silk_touch_nest matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_silk_touch_nest,limit=1] achievement.values
execute unless score husbandry_silk_touch_nest achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/silk_touch_nest=true}] at @s unless score @s achievement.husbandry_silk_touch_nest matches 1.. if entity @e[tag=achievement,tag=husbandry_silk_touch_nest,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_silk_touch_nest achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/silk_touch_nest=true}] at @s unless score @s achievement.husbandry_silk_touch_nest matches 1.. run function acrace:pick/take
execute unless score husbandry_silk_touch_nest achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/silk_touch_nest=true}] at @s unless score @s achievement.husbandry_silk_touch_nest matches 1.. run scoreboard players set @s achievement.husbandry_silk_touch_nest 1
execute unless score husbandry_silk_touch_nest achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/silk_touch_nest=true}] at @s unless score @s achievement.husbandry_silk_touch_nest matches 1.. run scoreboard players add husbandry_silk_touch_nest achievement.claims 1
## Bukkit Bukkit
execute unless score husbandry_tadpole_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tadpole_in_a_bucket=true}] at @s unless score @s achievement.husbandry_tadpole_in_a_bucket matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_tadpole_in_a_bucket,limit=1] achievement.values
execute unless score husbandry_tadpole_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tadpole_in_a_bucket=true}] at @s unless score @s achievement.husbandry_tadpole_in_a_bucket matches 1.. if entity @e[tag=achievement,tag=husbandry_tadpole_in_a_bucket,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_tadpole_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tadpole_in_a_bucket=true}] at @s unless score @s achievement.husbandry_tadpole_in_a_bucket matches 1.. run function acrace:pick/take
execute unless score husbandry_tadpole_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tadpole_in_a_bucket=true}] at @s unless score @s achievement.husbandry_tadpole_in_a_bucket matches 1.. run scoreboard players set @s achievement.husbandry_tadpole_in_a_bucket 1
execute unless score husbandry_tadpole_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tadpole_in_a_bucket=true}] at @s unless score @s achievement.husbandry_tadpole_in_a_bucket matches 1.. run scoreboard players add husbandry_tadpole_in_a_bucket achievement.claims 1
## A Seedy Place
execute unless score husbandry_plant_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_seed=true}] at @s unless score @s achievement.husbandry_plant_seed matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_plant_seed,limit=1] achievement.values
execute unless score husbandry_plant_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_seed=true}] at @s unless score @s achievement.husbandry_plant_seed matches 1.. if entity @e[tag=achievement,tag=husbandry_plant_seed,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_plant_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_seed=true}] at @s unless score @s achievement.husbandry_plant_seed matches 1.. run function acrace:pick/take
execute unless score husbandry_plant_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_seed=true}] at @s unless score @s achievement.husbandry_plant_seed matches 1.. run scoreboard players set @s achievement.husbandry_plant_seed 1
execute unless score husbandry_plant_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_seed=true}] at @s unless score @s achievement.husbandry_plant_seed matches 1.. run scoreboard players add husbandry_plant_seed achievement.claims 1
## Wax On
execute unless score husbandry_wax_on achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_on=true}] at @s unless score @s achievement.husbandry_wax_on matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_wax_on,limit=1] achievement.values
execute unless score husbandry_wax_on achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_on=true}] at @s unless score @s achievement.husbandry_wax_on matches 1.. if entity @e[tag=achievement,tag=husbandry_wax_on,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_wax_on achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_on=true}] at @s unless score @s achievement.husbandry_wax_on matches 1.. run function acrace:pick/take
execute unless score husbandry_wax_on achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_on=true}] at @s unless score @s achievement.husbandry_wax_on matches 1.. run scoreboard players set @s achievement.husbandry_wax_on 1
execute unless score husbandry_wax_on achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_on=true}] at @s unless score @s achievement.husbandry_wax_on matches 1.. run scoreboard players add husbandry_wax_on achievement.claims 1
## Two by Two
execute unless score husbandry_bred_all_animals achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/bred_all_animals=true}] at @s unless score @s achievement.husbandry_bred_all_animals matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_bred_all_animals,limit=1] achievement.values
execute unless score husbandry_bred_all_animals achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/bred_all_animals=true}] at @s unless score @s achievement.husbandry_bred_all_animals matches 1.. if entity @e[tag=achievement,tag=husbandry_bred_all_animals,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_bred_all_animals achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/bred_all_animals=true}] at @s unless score @s achievement.husbandry_bred_all_animals matches 1.. run function acrace:pick/take
execute unless score husbandry_bred_all_animals achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/bred_all_animals=true}] at @s unless score @s achievement.husbandry_bred_all_animals matches 1.. run scoreboard players set @s achievement.husbandry_bred_all_animals 1
execute unless score husbandry_bred_all_animals achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/bred_all_animals=true}] at @s unless score @s achievement.husbandry_bred_all_animals matches 1.. run scoreboard players add husbandry_bred_all_animals achievement.claims 1
## Birthday Song
execute unless score husbandry_allay_deliver_cake_to_note_block achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_cake_to_note_block=true}] at @s unless score @s achievement.husbandry_allay_deliver_cake_to_note_block matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_allay_deliver_cake_to_note_block,limit=1] achievement.values
execute unless score husbandry_allay_deliver_cake_to_note_block achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_cake_to_note_block=true}] at @s unless score @s achievement.husbandry_allay_deliver_cake_to_note_block matches 1.. if entity @e[tag=achievement,tag=husbandry_allay_deliver_cake_to_note_block,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_allay_deliver_cake_to_note_block achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_cake_to_note_block=true}] at @s unless score @s achievement.husbandry_allay_deliver_cake_to_note_block matches 1.. run function acrace:pick/take
execute unless score husbandry_allay_deliver_cake_to_note_block achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_cake_to_note_block=true}] at @s unless score @s achievement.husbandry_allay_deliver_cake_to_note_block matches 1.. run scoreboard players set @s achievement.husbandry_allay_deliver_cake_to_note_block 1
execute unless score husbandry_allay_deliver_cake_to_note_block achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/allay_deliver_cake_to_note_block=true}] at @s unless score @s achievement.husbandry_allay_deliver_cake_to_note_block matches 1.. run scoreboard players add husbandry_allay_deliver_cake_to_note_block achievement.claims 1
## A Complete Catalogue
execute unless score husbandry_complete_catalogue achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/complete_catalogue=true}] at @s unless score @s achievement.husbandry_complete_catalogue matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_complete_catalogue,limit=1] achievement.values
execute unless score husbandry_complete_catalogue achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/complete_catalogue=true}] at @s unless score @s achievement.husbandry_complete_catalogue matches 1.. if entity @e[tag=achievement,tag=husbandry_complete_catalogue,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_complete_catalogue achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/complete_catalogue=true}] at @s unless score @s achievement.husbandry_complete_catalogue matches 1.. run function acrace:pick/take
execute unless score husbandry_complete_catalogue achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/complete_catalogue=true}] at @s unless score @s achievement.husbandry_complete_catalogue matches 1.. run scoreboard players set @s achievement.husbandry_complete_catalogue 1
execute unless score husbandry_complete_catalogue achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/complete_catalogue=true}] at @s unless score @s achievement.husbandry_complete_catalogue matches 1.. run scoreboard players add husbandry_complete_catalogue achievement.claims 1
## Tactical Fishing
execute unless score husbandry_tactical_fishing achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tactical_fishing=true}] at @s unless score @s achievement.husbandry_tactical_fishing matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_tactical_fishing,limit=1] achievement.values
execute unless score husbandry_tactical_fishing achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tactical_fishing=true}] at @s unless score @s achievement.husbandry_tactical_fishing matches 1.. if entity @e[tag=achievement,tag=husbandry_tactical_fishing,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_tactical_fishing achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tactical_fishing=true}] at @s unless score @s achievement.husbandry_tactical_fishing matches 1.. run function acrace:pick/take
execute unless score husbandry_tactical_fishing achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tactical_fishing=true}] at @s unless score @s achievement.husbandry_tactical_fishing matches 1.. run scoreboard players set @s achievement.husbandry_tactical_fishing 1
execute unless score husbandry_tactical_fishing achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/tactical_fishing=true}] at @s unless score @s achievement.husbandry_tactical_fishing matches 1.. run scoreboard players add husbandry_tactical_fishing achievement.claims 1
## When the Squad Hops into Town
execute unless score husbandry_leash_all_frog_variants achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/leash_all_frog_variants=true}] at @s unless score @s achievement.husbandry_leash_all_frog_variants matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_leash_all_frog_variants,limit=1] achievement.values
execute unless score husbandry_leash_all_frog_variants achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/leash_all_frog_variants=true}] at @s unless score @s achievement.husbandry_leash_all_frog_variants matches 1.. if entity @e[tag=achievement,tag=husbandry_leash_all_frog_variants,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_leash_all_frog_variants achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/leash_all_frog_variants=true}] at @s unless score @s achievement.husbandry_leash_all_frog_variants matches 1.. run function acrace:pick/take
execute unless score husbandry_leash_all_frog_variants achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/leash_all_frog_variants=true}] at @s unless score @s achievement.husbandry_leash_all_frog_variants matches 1.. run scoreboard players set @s achievement.husbandry_leash_all_frog_variants 1
execute unless score husbandry_leash_all_frog_variants achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/leash_all_frog_variants=true}] at @s unless score @s achievement.husbandry_leash_all_frog_variants matches 1.. run scoreboard players add husbandry_leash_all_frog_variants achievement.claims 1
## A Balanced Diet
execute unless score husbandry_balanced_diet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/balanced_diet=true}] at @s unless score @s achievement.husbandry_balanced_diet matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_balanced_diet,limit=1] achievement.values
execute unless score husbandry_balanced_diet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/balanced_diet=true}] at @s unless score @s achievement.husbandry_balanced_diet matches 1.. if entity @e[tag=achievement,tag=husbandry_balanced_diet,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_balanced_diet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/balanced_diet=true}] at @s unless score @s achievement.husbandry_balanced_diet matches 1.. run function acrace:pick/take
execute unless score husbandry_balanced_diet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/balanced_diet=true}] at @s unless score @s achievement.husbandry_balanced_diet matches 1.. run scoreboard players set @s achievement.husbandry_balanced_diet 1
execute unless score husbandry_balanced_diet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/balanced_diet=true}] at @s unless score @s achievement.husbandry_balanced_diet matches 1.. run scoreboard players add husbandry_balanced_diet achievement.claims 1
## Serious Dedication
execute unless score husbandry_obtain_netherite_hoe achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_netherite_hoe=true}] at @s unless score @s achievement.husbandry_obtain_netherite_hoe matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_obtain_netherite_hoe,limit=1] achievement.values
execute unless score husbandry_obtain_netherite_hoe achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_netherite_hoe=true}] at @s unless score @s achievement.husbandry_obtain_netherite_hoe matches 1.. if entity @e[tag=achievement,tag=husbandry_obtain_netherite_hoe,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_obtain_netherite_hoe achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_netherite_hoe=true}] at @s unless score @s achievement.husbandry_obtain_netherite_hoe matches 1.. run function acrace:pick/take
execute unless score husbandry_obtain_netherite_hoe achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_netherite_hoe=true}] at @s unless score @s achievement.husbandry_obtain_netherite_hoe matches 1.. run scoreboard players set @s achievement.husbandry_obtain_netherite_hoe 1
execute unless score husbandry_obtain_netherite_hoe achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_netherite_hoe=true}] at @s unless score @s achievement.husbandry_obtain_netherite_hoe matches 1.. run scoreboard players add husbandry_obtain_netherite_hoe achievement.claims 1
## Wax Off
execute unless score husbandry_wax_off achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_off=true}] at @s unless score @s achievement.husbandry_wax_off matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_wax_off,limit=1] achievement.values
execute unless score husbandry_wax_off achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_off=true}] at @s unless score @s achievement.husbandry_wax_off matches 1.. if entity @e[tag=achievement,tag=husbandry_wax_off,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_wax_off achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_off=true}] at @s unless score @s achievement.husbandry_wax_off matches 1.. run function acrace:pick/take
execute unless score husbandry_wax_off achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_off=true}] at @s unless score @s achievement.husbandry_wax_off matches 1.. run scoreboard players set @s achievement.husbandry_wax_off 1
execute unless score husbandry_wax_off achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/wax_off=true}] at @s unless score @s achievement.husbandry_wax_off matches 1.. run scoreboard players add husbandry_wax_off achievement.claims 1
## The Cutest Predator
execute unless score husbandry_axolotl_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/axolotl_in_a_bucket=true}] at @s unless score @s achievement.husbandry_axolotl_in_a_bucket matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_axolotl_in_a_bucket,limit=1] achievement.values
execute unless score husbandry_axolotl_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/axolotl_in_a_bucket=true}] at @s unless score @s achievement.husbandry_axolotl_in_a_bucket matches 1.. if entity @e[tag=achievement,tag=husbandry_axolotl_in_a_bucket,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_axolotl_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/axolotl_in_a_bucket=true}] at @s unless score @s achievement.husbandry_axolotl_in_a_bucket matches 1.. run function acrace:pick/take
execute unless score husbandry_axolotl_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/axolotl_in_a_bucket=true}] at @s unless score @s achievement.husbandry_axolotl_in_a_bucket matches 1.. run scoreboard players set @s achievement.husbandry_axolotl_in_a_bucket 1
execute unless score husbandry_axolotl_in_a_bucket achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/axolotl_in_a_bucket=true}] at @s unless score @s achievement.husbandry_axolotl_in_a_bucket matches 1.. run scoreboard players add husbandry_axolotl_in_a_bucket achievement.claims 1
## With Our Powers Combined!
execute unless score husbandry_froglights achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/froglights=true}] at @s unless score @s achievement.husbandry_froglights matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_froglights,limit=1] achievement.values
execute unless score husbandry_froglights achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/froglights=true}] at @s unless score @s achievement.husbandry_froglights matches 1.. if entity @e[tag=achievement,tag=husbandry_froglights,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_froglights achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/froglights=true}] at @s unless score @s achievement.husbandry_froglights matches 1.. run function acrace:pick/take
execute unless score husbandry_froglights achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/froglights=true}] at @s unless score @s achievement.husbandry_froglights matches 1.. run scoreboard players set @s achievement.husbandry_froglights 1
execute unless score husbandry_froglights achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/froglights=true}] at @s unless score @s achievement.husbandry_froglights matches 1.. run scoreboard players add husbandry_froglights achievement.claims 1
## The Healing Power of Friendship!
execute unless score husbandry_kill_axolotl_target achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/kill_axolotl_target=true}] at @s unless score @s achievement.husbandry_kill_axolotl_target matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_kill_axolotl_target,limit=1] achievement.values
execute unless score husbandry_kill_axolotl_target achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/kill_axolotl_target=true}] at @s unless score @s achievement.husbandry_kill_axolotl_target matches 1.. if entity @e[tag=achievement,tag=husbandry_kill_axolotl_target,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_kill_axolotl_target achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/kill_axolotl_target=true}] at @s unless score @s achievement.husbandry_kill_axolotl_target matches 1.. run function acrace:pick/take
execute unless score husbandry_kill_axolotl_target achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/kill_axolotl_target=true}] at @s unless score @s achievement.husbandry_kill_axolotl_target matches 1.. run scoreboard players set @s achievement.husbandry_kill_axolotl_target 1
execute unless score husbandry_kill_axolotl_target achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/kill_axolotl_target=true}] at @s unless score @s achievement.husbandry_kill_axolotl_target matches 1.. run scoreboard players add husbandry_kill_axolotl_target achievement.claims 1
## Redstone
execute unless score redstone_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/root=true}] at @s unless score @s achievement.redstone_root matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_root,limit=1] achievement.values
execute unless score redstone_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/root=true}] at @s unless score @s achievement.redstone_root matches 1.. if entity @e[tag=achievement,tag=redstone_root,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/root=true}] at @s unless score @s achievement.redstone_root matches 1.. run function acrace:pick/take
execute unless score redstone_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/root=true}] at @s unless score @s achievement.redstone_root matches 1.. run scoreboard players set @s achievement.redstone_root 1
execute unless score redstone_root achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/root=true}] at @s unless score @s achievement.redstone_root matches 1.. run scoreboard players add redstone_root achievement.claims 1
## Repeater!
execute unless score redstone_repeater achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/repeater=true}] at @s unless score @s achievement.redstone_repeater matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_repeater,limit=1] achievement.values
execute unless score redstone_repeater achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/repeater=true}] at @s unless score @s achievement.redstone_repeater matches 1.. if entity @e[tag=achievement,tag=redstone_repeater,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_repeater achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/repeater=true}] at @s unless score @s achievement.redstone_repeater matches 1.. run function acrace:pick/take
execute unless score redstone_repeater achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/repeater=true}] at @s unless score @s achievement.redstone_repeater matches 1.. run scoreboard players set @s achievement.redstone_repeater 1
execute unless score redstone_repeater achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/repeater=true}] at @s unless score @s achievement.redstone_repeater matches 1.. run scoreboard players add redstone_repeater achievement.claims 1
## Comparator!
execute unless score redstone_comparator achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/comparator=true}] at @s unless score @s achievement.redstone_comparator matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_comparator,limit=1] achievement.values
execute unless score redstone_comparator achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/comparator=true}] at @s unless score @s achievement.redstone_comparator matches 1.. if entity @e[tag=achievement,tag=redstone_comparator,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_comparator achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/comparator=true}] at @s unless score @s achievement.redstone_comparator matches 1.. run function acrace:pick/take
execute unless score redstone_comparator achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/comparator=true}] at @s unless score @s achievement.redstone_comparator matches 1.. run scoreboard players set @s achievement.redstone_comparator 1
execute unless score redstone_comparator achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/comparator=true}] at @s unless score @s achievement.redstone_comparator matches 1.. run scoreboard players add redstone_comparator achievement.claims 1
## Space Hopper
execute unless score redstone_hopper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/hopper=true}] at @s unless score @s achievement.redstone_hopper matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_hopper,limit=1] achievement.values
execute unless score redstone_hopper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/hopper=true}] at @s unless score @s achievement.redstone_hopper matches 1.. if entity @e[tag=achievement,tag=redstone_hopper,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_hopper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/hopper=true}] at @s unless score @s achievement.redstone_hopper matches 1.. run function acrace:pick/take
execute unless score redstone_hopper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/hopper=true}] at @s unless score @s achievement.redstone_hopper matches 1.. run scoreboard players set @s achievement.redstone_hopper 1
execute unless score redstone_hopper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/hopper=true}] at @s unless score @s achievement.redstone_hopper matches 1.. run scoreboard players add redstone_hopper achievement.claims 1
## Space Dropper
execute unless score redstone_dropper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/dropper=true}] at @s unless score @s achievement.redstone_dropper matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_dropper,limit=1] achievement.values
execute unless score redstone_dropper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/dropper=true}] at @s unless score @s achievement.redstone_dropper matches 1.. if entity @e[tag=achievement,tag=redstone_dropper,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_dropper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/dropper=true}] at @s unless score @s achievement.redstone_dropper matches 1.. run function acrace:pick/take
execute unless score redstone_dropper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/dropper=true}] at @s unless score @s achievement.redstone_dropper matches 1.. run scoreboard players set @s achievement.redstone_dropper 1
execute unless score redstone_dropper achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/dropper=true}] at @s unless score @s achievement.redstone_dropper matches 1.. run scoreboard players add redstone_dropper achievement.claims 1
## Railway
execute unless score redstone_rail achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/rail=true}] at @s unless score @s achievement.redstone_rail matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_rail,limit=1] achievement.values
execute unless score redstone_rail achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/rail=true}] at @s unless score @s achievement.redstone_rail matches 1.. if entity @e[tag=achievement,tag=redstone_rail,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_rail achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/rail=true}] at @s unless score @s achievement.redstone_rail matches 1.. run function acrace:pick/take
execute unless score redstone_rail achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/rail=true}] at @s unless score @s achievement.redstone_rail matches 1.. run scoreboard players set @s achievement.redstone_rail 1
execute unless score redstone_rail achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/rail=true}] at @s unless score @s achievement.redstone_rail matches 1.. run scoreboard players add redstone_rail achievement.claims 1
## All Aboard!
execute unless score redstone_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/minecart=true}] at @s unless score @s achievement.redstone_minecart matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_minecart,limit=1] achievement.values
execute unless score redstone_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/minecart=true}] at @s unless score @s achievement.redstone_minecart matches 1.. if entity @e[tag=achievement,tag=redstone_minecart,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/minecart=true}] at @s unless score @s achievement.redstone_minecart matches 1.. run function acrace:pick/take
execute unless score redstone_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/minecart=true}] at @s unless score @s achievement.redstone_minecart matches 1.. run scoreboard players set @s achievement.redstone_minecart 1
execute unless score redstone_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/minecart=true}] at @s unless score @s achievement.redstone_minecart matches 1.. run scoreboard players add redstone_minecart achievement.claims 1
## Fuel Engine
execute unless score redstone_furnace_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/furnace_minecart=true}] at @s unless score @s achievement.redstone_furnace_minecart matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=redstone_furnace_minecart,limit=1] achievement.values
execute unless score redstone_furnace_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/furnace_minecart=true}] at @s unless score @s achievement.redstone_furnace_minecart matches 1.. if entity @e[tag=achievement,tag=redstone_furnace_minecart,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score redstone_furnace_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/furnace_minecart=true}] at @s unless score @s achievement.redstone_furnace_minecart matches 1.. run function acrace:pick/take
execute unless score redstone_furnace_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/furnace_minecart=true}] at @s unless score @s achievement.redstone_furnace_minecart matches 1.. run scoreboard players set @s achievement.redstone_furnace_minecart 1
execute unless score redstone_furnace_minecart achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:redstone/furnace_minecart=true}] at @s unless score @s achievement.redstone_furnace_minecart matches 1.. run scoreboard players add redstone_furnace_minecart achievement.claims 1
## Smells Interesting
execute unless score husbandry_obtain_sniffer_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_sniffer_egg=true}] at @s unless score @s achievement.husbandry_obtain_sniffer_egg matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_obtain_sniffer_egg,limit=1] achievement.values
execute unless score husbandry_obtain_sniffer_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_sniffer_egg=true}] at @s unless score @s achievement.husbandry_obtain_sniffer_egg matches 1.. if entity @e[tag=achievement,tag=husbandry_obtain_sniffer_egg,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_obtain_sniffer_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_sniffer_egg=true}] at @s unless score @s achievement.husbandry_obtain_sniffer_egg matches 1.. run function acrace:pick/take
execute unless score husbandry_obtain_sniffer_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_sniffer_egg=true}] at @s unless score @s achievement.husbandry_obtain_sniffer_egg matches 1.. run scoreboard players set @s achievement.husbandry_obtain_sniffer_egg 1
execute unless score husbandry_obtain_sniffer_egg achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/obtain_sniffer_egg=true}] at @s unless score @s achievement.husbandry_obtain_sniffer_egg matches 1.. run scoreboard players add husbandry_obtain_sniffer_egg achievement.claims 1
## Little Sniffs
execute unless score husbandry_feed_snifflet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/feed_snifflet=true}] at @s unless score @s achievement.husbandry_feed_snifflet matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_feed_snifflet,limit=1] achievement.values
execute unless score husbandry_feed_snifflet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/feed_snifflet=true}] at @s unless score @s achievement.husbandry_feed_snifflet matches 1.. if entity @e[tag=achievement,tag=husbandry_feed_snifflet,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_feed_snifflet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/feed_snifflet=true}] at @s unless score @s achievement.husbandry_feed_snifflet matches 1.. run function acrace:pick/take
execute unless score husbandry_feed_snifflet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/feed_snifflet=true}] at @s unless score @s achievement.husbandry_feed_snifflet matches 1.. run scoreboard players set @s achievement.husbandry_feed_snifflet 1
execute unless score husbandry_feed_snifflet achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/feed_snifflet=true}] at @s unless score @s achievement.husbandry_feed_snifflet matches 1.. run scoreboard players add husbandry_feed_snifflet achievement.claims 1
## Planting the Past
execute unless score husbandry_plant_any_sniffer_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_any_sniffer_seed=true}] at @s unless score @s achievement.husbandry_plant_any_sniffer_seed matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=husbandry_plant_any_sniffer_seed,limit=1] achievement.values
execute unless score husbandry_plant_any_sniffer_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_any_sniffer_seed=true}] at @s unless score @s achievement.husbandry_plant_any_sniffer_seed matches 1.. if entity @e[tag=achievement,tag=husbandry_plant_any_sniffer_seed,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score husbandry_plant_any_sniffer_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_any_sniffer_seed=true}] at @s unless score @s achievement.husbandry_plant_any_sniffer_seed matches 1.. run function acrace:pick/take
execute unless score husbandry_plant_any_sniffer_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_any_sniffer_seed=true}] at @s unless score @s achievement.husbandry_plant_any_sniffer_seed matches 1.. run scoreboard players set @s achievement.husbandry_plant_any_sniffer_seed 1
execute unless score husbandry_plant_any_sniffer_seed achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:husbandry/plant_any_sniffer_seed=true}] at @s unless score @s achievement.husbandry_plant_any_sniffer_seed matches 1.. run scoreboard players add husbandry_plant_any_sniffer_seed achievement.claims 1
## Crafting a New Look
execute unless score adventure_trim_with_any_armor_pattern achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_any_armor_pattern=true}] at @s unless score @s achievement.adventure_trim_with_any_armor_pattern matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_trim_with_any_armor_pattern,limit=1] achievement.values
execute unless score adventure_trim_with_any_armor_pattern achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_any_armor_pattern=true}] at @s unless score @s achievement.adventure_trim_with_any_armor_pattern matches 1.. if entity @e[tag=achievement,tag=adventure_trim_with_any_armor_pattern,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_trim_with_any_armor_pattern achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_any_armor_pattern=true}] at @s unless score @s achievement.adventure_trim_with_any_armor_pattern matches 1.. run function acrace:pick/take
execute unless score adventure_trim_with_any_armor_pattern achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_any_armor_pattern=true}] at @s unless score @s achievement.adventure_trim_with_any_armor_pattern matches 1.. run scoreboard players set @s achievement.adventure_trim_with_any_armor_pattern 1
execute unless score adventure_trim_with_any_armor_pattern achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_any_armor_pattern=true}] at @s unless score @s achievement.adventure_trim_with_any_armor_pattern matches 1.. run scoreboard players add adventure_trim_with_any_armor_pattern achievement.claims 1
## Smithing with Style
execute unless score adventure_trim_with_all_exclusive_armor_patterns achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_all_exclusive_armor_patterns=true}] at @s unless score @s achievement.adventure_trim_with_all_exclusive_armor_patterns matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_trim_with_all_exclusive_armor_patterns,limit=1] achievement.values
execute unless score adventure_trim_with_all_exclusive_armor_patterns achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_all_exclusive_armor_patterns=true}] at @s unless score @s achievement.adventure_trim_with_all_exclusive_armor_patterns matches 1.. if entity @e[tag=achievement,tag=adventure_trim_with_all_exclusive_armor_patterns,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_trim_with_all_exclusive_armor_patterns achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_all_exclusive_armor_patterns=true}] at @s unless score @s achievement.adventure_trim_with_all_exclusive_armor_patterns matches 1.. run function acrace:pick/take
execute unless score adventure_trim_with_all_exclusive_armor_patterns achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_all_exclusive_armor_patterns=true}] at @s unless score @s achievement.adventure_trim_with_all_exclusive_armor_patterns matches 1.. run scoreboard players set @s achievement.adventure_trim_with_all_exclusive_armor_patterns 1
execute unless score adventure_trim_with_all_exclusive_armor_patterns achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/trim_with_all_exclusive_armor_patterns=true}] at @s unless score @s achievement.adventure_trim_with_all_exclusive_armor_patterns matches 1.. run scoreboard players add adventure_trim_with_all_exclusive_armor_patterns achievement.claims 1
## Respecting the Remnants
execute unless score adventure_salvage_sherd achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/salvage_sherd=true}] at @s unless score @s achievement.adventure_salvage_sherd matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_salvage_sherd,limit=1] achievement.values
execute unless score adventure_salvage_sherd achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/salvage_sherd=true}] at @s unless score @s achievement.adventure_salvage_sherd matches 1.. if entity @e[tag=achievement,tag=adventure_salvage_sherd,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_salvage_sherd achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/salvage_sherd=true}] at @s unless score @s achievement.adventure_salvage_sherd matches 1.. run function acrace:pick/take
execute unless score adventure_salvage_sherd achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/salvage_sherd=true}] at @s unless score @s achievement.adventure_salvage_sherd matches 1.. run scoreboard players set @s achievement.adventure_salvage_sherd 1
execute unless score adventure_salvage_sherd achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/salvage_sherd=true}] at @s unless score @s achievement.adventure_salvage_sherd matches 1.. run scoreboard players add adventure_salvage_sherd achievement.claims 1
## Careful Restoration
execute unless score adventure_craft_decorated_pot_using_only_sherds achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/craft_decorated_pot_using_only_sherds=true}] at @s unless score @s achievement.adventure_craft_decorated_pot_using_only_sherds matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_craft_decorated_pot_using_only_sherds,limit=1] achievement.values
execute unless score adventure_craft_decorated_pot_using_only_sherds achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/craft_decorated_pot_using_only_sherds=true}] at @s unless score @s achievement.adventure_craft_decorated_pot_using_only_sherds matches 1.. if entity @e[tag=achievement,tag=adventure_craft_decorated_pot_using_only_sherds,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_craft_decorated_pot_using_only_sherds achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/craft_decorated_pot_using_only_sherds=true}] at @s unless score @s achievement.adventure_craft_decorated_pot_using_only_sherds matches 1.. run function acrace:pick/take
execute unless score adventure_craft_decorated_pot_using_only_sherds achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/craft_decorated_pot_using_only_sherds=true}] at @s unless score @s achievement.adventure_craft_decorated_pot_using_only_sherds matches 1.. run scoreboard players set @s achievement.adventure_craft_decorated_pot_using_only_sherds 1
execute unless score adventure_craft_decorated_pot_using_only_sherds achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/craft_decorated_pot_using_only_sherds=true}] at @s unless score @s achievement.adventure_craft_decorated_pot_using_only_sherds matches 1.. run scoreboard players add adventure_craft_decorated_pot_using_only_sherds achievement.claims 1
## The Power of Books
execute unless score adventure_read_power_of_chiseled_bookshelf achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/read_power_of_chiseled_bookshelf=true}] at @s unless score @s achievement.adventure_read_power_of_chiseled_bookshelf matches 1.. run scoreboard players operation @s achievement.claiming_points = @e[tag=achievement,tag=adventure_read_power_of_chiseled_bookshelf,limit=1] achievement.values
execute unless score adventure_read_power_of_chiseled_bookshelf achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/read_power_of_chiseled_bookshelf=true}] at @s unless score @s achievement.adventure_read_power_of_chiseled_bookshelf matches 1.. if entity @e[tag=achievement,tag=adventure_read_power_of_chiseled_bookshelf,tag=multiplied,limit=1] run tag @s add claimed_multiply
execute unless score adventure_read_power_of_chiseled_bookshelf achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/read_power_of_chiseled_bookshelf=true}] at @s unless score @s achievement.adventure_read_power_of_chiseled_bookshelf matches 1.. run function acrace:pick/take
execute unless score adventure_read_power_of_chiseled_bookshelf achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/read_power_of_chiseled_bookshelf=true}] at @s unless score @s achievement.adventure_read_power_of_chiseled_bookshelf matches 1.. run scoreboard players set @s achievement.adventure_read_power_of_chiseled_bookshelf 1
execute unless score adventure_read_power_of_chiseled_bookshelf achievement.claims >= lock_achievements_value global as @a[advancements={minecraft:adventure/read_power_of_chiseled_bookshelf=true}] at @s unless score @s achievement.adventure_read_power_of_chiseled_bookshelf matches 1.. run scoreboard players add adventure_read_power_of_chiseled_bookshelf achievement.claims 1